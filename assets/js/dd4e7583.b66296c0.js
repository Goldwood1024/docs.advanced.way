(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{237:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return p}));var a=t(3),i=t(7),l=(t(0),t(270)),r={title:"List"},c={unversionedId:"java/collection/List",id:"java/collection/List",isDocsHomePage:!1,title:"List",description:"List \u63a5\u53e3\u7c7b",source:"@site/docs/java/collection/List.md",slug:"/java/collection/List",permalink:"/docs.advanced.way/docs/java/collection/List",editUrl:"https://github.com/Goldwood1024/docs.advanced.way/docs/docs/java/collection/List.md",version:"current",lastUpdatedAt:1616148576,formattedLastUpdatedAt:"3/19/2021",sidebar:"java",previous:{title:"Collection",permalink:"/docs.advanced.way/docs/java/collection/Collection"},next:{title:"Map",permalink:"/docs.advanced.way/docs/java/collection/Map"}},o=[{value:"List \u63a5\u53e3\u7c7b",id:"list-\u63a5\u53e3\u7c7b",children:[]},{value:"ArrayList",id:"arraylist",children:[{value:"\u6846\u67b6\u56fe",id:"\u6846\u67b6\u56fe",children:[]},{value:"\u5b9e\u73b0\u539f\u7406",id:"\u5b9e\u73b0\u539f\u7406",children:[]},{value:"\u5e38\u7528\u65b9\u6cd5",id:"\u5e38\u7528\u65b9\u6cd5",children:[]},{value:"\u6570\u7ec4\u4e3a\u4ec0\u4e48\u5feb",id:"\u6570\u7ec4\u4e3a\u4ec0\u4e48\u5feb",children:[]}]},{value:"LinkedList",id:"linkedlist",children:[{value:"\u6846\u67b6\u56fe",id:"\u6846\u67b6\u56fe-1",children:[]},{value:"\u6e90\u7801",id:"\u6e90\u7801",children:[]},{value:"Deque.class",id:"dequeclass",children:[]},{value:"Queue.class",id:"queueclass",children:[]}]},{value:"Vector",id:"vector",children:[{value:"\u67b6\u6784\u56fe",id:"\u67b6\u6784\u56fe",children:[]},{value:"\u6e90\u7801",id:"\u6e90\u7801-1",children:[]}]}],s={toc:o};function p(e){var n=e.components,r=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,r,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"list-\u63a5\u53e3\u7c7b"},"List \u63a5\u53e3\u7c7b"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'public interface List<E> extends Collection<E> {\n    int size();\n    boolean isEmpty();\n    boolean contains(Object o);\n    Iterator<E> iterator();\n    Object[] toArray();\n\n    <T> T[] toArray(T[] a);\n    boolean add(E e);\n    boolean remove(Object o);\n    boolean containsAll(Collection<?> c);\n    boolean addAll(Collection<? extends E> c);\n    boolean addAll(int index, Collection<? extends E> c);\n    boolean removeAll(Collection<?> c);\n    boolean retainAll(Collection<?> c);\n    default void replaceAll(UnaryOperator<E> operator) {\n        Objects.requireNonNull(operator);\n        final ListIterator<E> li = this.listIterator();\n        while (li.hasNext()) {\n            li.set(operator.apply(li.next()));\n        }\n    }\n\n    @SuppressWarnings({"unchecked", "rawtypes"})\n    default void sort(Comparator<? super E> c) {\n        Object[] a = this.toArray();\n        Arrays.sort(a, (Comparator) c);\n        ListIterator<E> i = this.listIterator();\n        for (Object e : a) {\n            i.next();\n            i.set((E) e);\n        }\n    }\n    void clear();\n    boolean equals(Object o);\n    int hashCode();\n    E get(int index);\n    E set(int index, E element);\n    void add(int index, E element);\n    E remove(int index);\n    int indexOf(Object o);\n    int lastIndexOf(Object o);\n    ListIterator<E> listIterator();\n    ListIterator<E> listIterator(int index);\n    List<E> subList(int fromIndex, int toIndex);\n\n    @Override\n    default Spliterator<E> spliterator() {\n        if (this instanceof RandomAccess) {\n            return new AbstractList.RandomAccessSpliterator<>(this);\n        } else {\n            return Spliterators.spliterator(this, Spliterator.ORDERED);\n        }\n    }\n    static <E> List<E> of() {\n        return ImmutableCollections.emptyList();\n    }\n    static <E> List<E> of(E e1) {\n        return new ImmutableCollections.List12<>(e1);\n    }\n    static <E> List<E> of(E e1, E e2) {\n        return new ImmutableCollections.List12<>(e1, e2);\n    }\n    static <E> List<E> of(E e1, E e2, E e3) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5, E e6) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5,\n                                                e6);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5,\n                                                e6, e7);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5,\n                                                e6, e7, e8);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5,\n                                                e6, e7, e8, e9);\n    }\n    static <E> List<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10) {\n        return new ImmutableCollections.ListN<>(e1, e2, e3, e4, e5,\n                                                e6, e7, e8, e9, e10);\n    }\n\n    @SafeVarargs\n    @SuppressWarnings("varargs")\n    static <E> List<E> of(E... elements) {\n        switch (elements.length) { // implicit null check of elements\n            case 0:\n                return ImmutableCollections.emptyList();\n            case 1:\n                return new ImmutableCollections.List12<>(elements[0]);\n            case 2:\n                return new ImmutableCollections.List12<>(elements[0], elements[1]);\n            default:\n                return new ImmutableCollections.ListN<>(elements);\n        }\n    }\n\n    static <E> List<E> copyOf(Collection<? extends E> coll) {\n        return ImmutableCollections.listCopy(coll);\n    }\n}\n\n')),Object(l.b)("h2",{id:"arraylist"},"ArrayList"),Object(l.b)("h3",{id:"\u6846\u67b6\u56fe"},"\u6846\u67b6\u56fe"),Object(l.b)("p",null,Object(l.b)("img",{alt:"arraylist",src:t(490).default})),Object(l.b)("h3",{id:"\u5b9e\u73b0\u539f\u7406"},"\u5b9e\u73b0\u539f\u7406"),Object(l.b)("p",null,"AbstractCollection \u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0\u4e86Collection\u63a5\u53e3"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public abstract class AbstractCollection<E> implements Collection<E> {}\n")),Object(l.b)("p",null,"AbstractList.class"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> {}\n")),Object(l.b)("p",null,"ArrayList.class"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"java.lang.Object\n    java.util.AbstractCollection<E>\n        java.util.AbstractList<E>\n            java.util.ArrayList<E>\npublic class ArrayList<E> extends AbstractList<E>\n        implements List<E>, RandomAccess, Cloneable, java.io.Serializable{...}\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"1.ArrayList\u7ee7\u627f\u4e86\u62bd\u8c61\u7c7bAbstractList\uff0c\u540c\u65f6\u5b9e\u73b0\u4e86List\u3001RandomAccess\u3001Cloneable\u3001Serializable\u63a5\u53e3\u3002")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"2.\u62bd\u8c61\u7c7bAbstractList\u7ee7\u627f\u81ea\u62bd\u8c61\u7c7bAbstractCollection\u540c\u65f6\u5b9e\u73b0\u4e86List\u63a5\u53e3\u3002")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"3.\u62bd\u8c61\u7c7bAbstractCollection\u5b9e\u73b0\u4e86Collection\u63a5\u53e3")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"4.List\u63a5\u53e3\u7ee7\u627f\u81eaCollection\u63a5\u53e3")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"5.Collection\u63a5\u53e3\u7ee7\u627f\u81eaIterable\u63a5\u53e3"))),Object(l.b)("h3",{id:"\u5e38\u7528\u65b9\u6cd5"},"\u5e38\u7528\u65b9\u6cd5"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'    // \u521d\u59cb\u5bb9\u91cf\u88ab\u8bbe\u7f6e\u4e3a10\n    private static final int DEFAULT_CAPACITY = 10;\n    // \u7a7a\u5143\u7d20\n    private static final Object[] EMPTY_ELEMENTDATA = {};\n    // \u521d\u59cb\u5316\u7a7a\u5143\u7d20\n    private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n    // \u6570\u7ec4\u5b9e\u9645\u5143\u7d20\u5927\u5c0f\n    private int size;\n    // \u6570\u7ec4\u4fee\u6539\u6b21\u6570 \u6ca1\u4fee\u6539\u4e00\u6b21\u52a0\u4e00\n    protected transient int modCount = 0;\n\n    // \u6570\u7ec4\u6700\u5927\u4e2a\u6570\n    private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;\n\n    // \u6784\u9020\u5668\u521b\u5efa\u5b9e\u4f8b\u5e76\u521d\u59cb\u5316\u5143\u7d20\n    public ArrayList(int initialCapacity) {\n        if (initialCapacity > 0) {\n            this.elementData = new Object[initialCapacity];\n        } else if (initialCapacity == 0) {\n            this.elementData = EMPTY_ELEMENTDATA;\n        } else {\n            throw new IllegalArgumentException("Illegal Capacity: "+\n                                               initialCapacity);\n        }\n    }\n\n    public ArrayList() {\n        this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n    }\n\n    public ArrayList(Collection<? extends E> c) {\n        Object[] a = c.toArray();\n        if ((size = a.length) != 0) {\n            if (c.getClass() == ArrayList.class) {\n                elementData = a;\n            } else {\n                elementData = Arrays.copyOf(a, size, Object[].class);\n            }\n        } else {\n            // replace with empty array.\n            elementData = EMPTY_ELEMENTDATA;\n        }\n    }\n\n    // \u6dfb\u52a0\u5143\u7d20\n    private void add(E e, Object[] elementData, int s) {\n        // \u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9\uff08\u7b2c\u4e00\u6b21\u6dfb\u52a0\u5143\u7d20\u65f6\u521d\u59cb\u5316\u957f\u5ea6\uff09\n        if (s == elementData.length)\n            elementData = grow();\n        elementData[s] = e; // \u6570\u7ec4\u503c\n        size = s + 1; // \u6570\u7ec4\u5143\u7d20\u957f\u5ea6\u52a0\u4e00\n    }\n\n    // \u6269\u5bb9\n    private Object[] grow() {\n        return grow(size + 1);\n    }\n\n    private Object[] grow(int minCapacity) {\n        // \u590d\u5236\u6570\u636e\n        return elementData = Arrays.copyOf(elementData,\n                                           newCapacity(minCapacity));\n    }\n\n    // \u8fd4\u56de\u4e00\u6b21\u6269\u5bb9\u7684\u957f\u5ea6\n    private int newCapacity(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        // \u65b0\u5bb9\u91cf\u6269\u5927\u5230\u539f\u5bb9\u91cf\u76841.5\u500d(\u5411\u4e0b\u53d6\u6574)\n        int newCapacity = oldCapacity + (oldCapacity >> 1);\n        if (newCapacity - minCapacity <= 0) {\n            if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA)\n                return Math.max(DEFAULT_CAPACITY, minCapacity);\n            if (minCapacity < 0) // overflow\n                throw new OutOfMemoryError();\n            return minCapacity;\n        }\n\n        // \u5224\u65ad\u6269\u5bb9\u7684\u5bb9\u91cf\u662f\u5426\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u503c\n        return (newCapacity - MAX_ARRAY_SIZE <= 0)\n            ? newCapacity\n            : hugeCapacity(minCapacity);\n    }\n\n    private static int hugeCapacity(int minCapacity) {\n        if (minCapacity < 0) // overflow\n            throw new OutOfMemoryError();\n        return (minCapacity > MAX_ARRAY_SIZE)\n            ? Integer.MAX_VALUE\n            : MAX_ARRAY_SIZE;\n    }\n\n    // \u79fb\u9664\u5143\u7d20\n    public E remove(int index) {\n        // \u68c0\u67e5\n        Objects.checkIndex(index, size);\n        // \u5b9a\u4e49\u64cd\u4f5c\u6570\u7ec4\u526f\u672c\n        final Object[] es = elementData;\n\n        @SuppressWarnings("unchecked") E oldValue = (E) es[index];\n        fastRemove(es, index);\n\n        return oldValue;\n    }\n\n    private void fastRemove(Object[] es, int i) {\n        // \u4fee\u6539\u6b21\u6570\n        modCount++;\n        final int newSize;\n        // \u65b0\u6570\u7ec4\u5927\u5c0f\n        if ((newSize = size - 1) > i)\n            // \u5c06i + 1\u540e\u9762\u7684\u5143\u7d20\u8986\u76d6 i \u540e\u9762\u7684\u5143\u7d20\n            System.arraycopy(es, i + 1, es, i, newSize - i);\n        es[size = newSize] = null;\n    }\n')),Object(l.b)("p",null,"Arrays.class"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'    // \u590d\u5236\u6570\u636e\n    public static <T> T[] copyOf(T[] original, int newLength) {\n        return (T[]) copyOf(original, newLength, original.getClass());\n    }\n\n    /* @param <U> \u6e90\u6570\u7ec4\u7684\u7c7b\n     * @param <T> \u8fd4\u56de\u7684\u6570\u7ec4\u7684\u7c7b\n     * @param original \u9700\u8981\u590d\u5236\u7684\u6e90\u6570\u7ec4\n     * @param newLength \u65b0\u6570\u7ec4\u7684\u957f\u5ea6\n     * @param newType \u8fd4\u56de\u7684\u6570\u7ec4\u7684\u7c7b\u578b\n     */\n    @HotSpotIntrinsicCandidate\n    public static <T,U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType) {\n        @SuppressWarnings("unchecked")\n        // \u521b\u5efa\u6307\u5b9a\u957f\u5ea6\u7684\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u7ec4\n        T[] copy = ((Object)newType == (Object)Object[].class)\n            ? (T[]) new Object[newLength]\n            : (T[]) Array.newInstance(newType.getComponentType(), newLength);\n        \n        // \u8c03\u7528\u672c\u5730\u65b9\u6cd5\n        System.arraycopy(original, 0, copy, 0,\n                         Math.min(original.length, newLength));\n        return copy;\n    }\n')),Object(l.b)("p",null,"System.class"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"    @HotSpotIntrinsicCandidate\n    public static native void arraycopy(Object src,  int  srcPos,\n                                        Object dest, int destPos,\n                                        int length);\n")),Object(l.b)("p",null,"@HotSpotIntrinsicCandidate"),Object(l.b)("h3",{id:"\u6570\u7ec4\u4e3a\u4ec0\u4e48\u5feb"},"\u6570\u7ec4\u4e3a\u4ec0\u4e48\u5feb"),Object(l.b)("h4",{id:"\u5bfb\u5740\u64cd\u4f5c\u6b21\u6570\u94fe\u8868\u8981\u591a\u4e00\u4e9b"},"\u5bfb\u5740\u64cd\u4f5c\u6b21\u6570\u94fe\u8868\u8981\u591a\u4e00\u4e9b"),Object(l.b)("p",null,"\u6570\u7ec4\u53ea\u9700\u5bf9 ","[\u57fa\u5730\u5740+\u5143\u7d20\u5927\u5c0f*k]"," \u5c31\u80fd\u627e\u5230\u7b2ck+1\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u5bf9\u5176\u53d6\u5730\u5740\u5c31\u80fd\u83b7\u5f97\u8be5\u5143\u7d20\u3002\n\u94fe\u8868\u8981\u83b7\u5f97\u7b2ck\u4e2a\u5143\u7d20\uff0c\u9996\u5148\u8981\u5728\u5176\u7b2ck-1\u4e2a\u5143\u7d20\u5bfb\u627e\u5230\u5176next\u6307\u9488\u504f\u79fb\uff0c\u518d\u5c06next\u6307\u9488\u4f5c\u4e3a\u5730\u5740\u83b7\u5f97\u503c\uff0c\u8fd9\u6837\u5c31\u8981\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u627e\u8d77\uff0c\u591a\u4e86\u591a\u6b65\u5bfb\u5740\u64cd\u4f5c\uff0c\u5f53\u6570\u636e\u91cf\u5927\u4e14\u5176\u5b83\u64cd\u4f5c\u8f83\u5c11\u65f6\uff0c\u8fd9\u5c31\u6709\u5dee\u8ddd\u4e86\u3002"),Object(l.b)("h4",{id:"cpu\u7f13\u5b58"},"CPU\u7f13\u5b58"),Object(l.b)("p",null,"CPU\u7f13\u5b58\u4f1a\u628a\u4e00\u7247\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u8bfb\u5165\uff0c\u56e0\u4e3a\u6570\u7ec4\u7ed3\u6784\u662f\u8fde\u7eed\u7684\u5185\u5b58\u5730\u5740\uff0c\u6240\u4ee5\u6570\u7ec4\u5168\u90e8\u6216\u8005\u90e8\u5206\u5143\u7d20\u88ab\u8fde\u7eed\u5b58\u5728CPU\u7f13\u5b58\u91cc\u9762\uff0c\u5e73\u5747\u8bfb\u53d6\u6bcf\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u53ea\u89813\u4e2aCPU\u65f6\u949f\u5468\u671f\u3002\n\u800c\u94fe\u8868\u7684\u8282\u70b9\u662f\u5206\u6563\u5728\u5806\u7a7a\u95f4\u91cc\u9762\u7684\uff0c\u8fd9\u65f6\u5019CPU\u7f13\u5b58\u5e2e\u4e0d\u4e0a\u5fd9\uff0c\u53ea\u80fd\u662f\u53bb\u8bfb\u53d6\u5185\u5b58\uff0c\u5e73\u5747\u8bfb\u53d6\u65f6\u95f4\u9700\u8981100\u4e2aCPU\u65f6\u949f\u5468\u671f\u3002\nCache-oblivious algorithm"),Object(l.b)("h2",{id:"linkedlist"},"LinkedList"),Object(l.b)("h3",{id:"\u6846\u67b6\u56fe-1"},"\u6846\u67b6\u56fe"),Object(l.b)("p",null,Object(l.b)("img",{alt:"arraylist",src:t(491).default})),Object(l.b)("h3",{id:"\u6e90\u7801"},"\u6e90\u7801"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public class LinkedList<E>\n    extends AbstractSequentialList<E>\n    implements List<E>, Deque<E>, Cloneable, java.io.Serializable\n{\n    // \u7ed3\u70b9\u957f\u5ea6 \uff08 \u6700\u5927\u7ed3\u70b9\u6570 2^31 - 1 \uff09\n    transient int size = 0;\n    // \u5934\u7ed3\u70b9\n    transient Node<E> first;\n    // \u5c3e\u7ed3\u70b9\n    transient Node<E> last;\n\n    // \u6784\u9020\u5668\n    public LinkedList() {\n    }\n\n    // \u5185\u90e8\u7c7b\n    private static class Node<E> {\n        E item;\n        Node<E> next;\n        Node<E> prev;\n\n        Node(Node<E> prev, E element, Node<E> next) {\n            this.item = element;\n            this.next = next;\n            this.prev = prev;\n        }\n    }\n\n    // \u5934\u63d2\u5165\n    void linkLast(E e) {\n        final Node<E> l = last;\n        final Node<E> newNode = new Node<>(l, e, null);\n        last = newNode;\n        if (l == null)\n            first = newNode;\n        else\n            l.next = newNode;\n        size++;\n        modCount++;\n    }\n\n    // \u5c3e\u63d2\u5165\n    void linkLast(E e) {\n        final Node<E> l = last;\n        final Node<E> newNode = new Node<>(l, e, null);\n        last = newNode;\n        if (l == null)\n            first = newNode;\n        else\n            l.next = newNode;\n        size++;\n        modCount++;\n    }\n\n    // \u79fb\u9664\u5934\u90e8\u5143\u7d20\n    private E unlinkFirst(Node<E> f) {\n        // assert f == first && f != null;\n        final E element = f.item;\n        final Node<E> next = f.next;\n        f.item = null;\n        f.next = null; // help GC\n        first = next;\n        if (next == null)\n            last = null;\n        else\n            next.prev = null;\n        size--;\n        modCount++;\n        return element;\n    }\n\n    // \u79fb\u9664\u5c3e\u90e8\u5143\u7d20\n    private E unlinkLast(Node<E> l) {\n        // assert l == last && l != null;\n        final E element = l.item;\n        final Node<E> prev = l.prev;\n        l.item = null;\n        l.prev = null; // help GC\n        last = prev;\n        if (prev == null)\n            first = null;\n        else\n            prev.next = null;\n        size--;\n        modCount++;\n        return element;\n    }\n\n    // \u79fb\u9664\u4e2d\u95f4\u5143\u7d20\n    E unlink(Node<E> x) {\n        // assert x != null;\n        final E element = x.item;\n        final Node<E> next = x.next;\n        final Node<E> prev = x.prev;\n\n        if (prev == null) {\n            first = next;\n        } else {\n            prev.next = next;\n            x.prev = null;\n        }\n\n        if (next == null) {\n            last = prev;\n        } else {\n            next.prev = prev;\n            x.next = null;\n        }\n\n        x.item = null;\n        size--;\n        modCount++;\n        return element;\n    }\n\n    // \u94fe\u8868\u8f6c\u6570\u7ec4\n    public Object[] toArray() {\n        // \u5b9a\u4e49\u7b49\u957f\u7684\u6570\u7ec4\n        Object[] result = new Object[size];\n        int i = 0;\n        // \u904d\u5386\u94fe\u8868\n        for (Node<E> x = first; x != null; x = x.next)\n            result[i++] = x.item;\n        return result;\n    }\n}\n")),Object(l.b)("h3",{id:"dequeclass"},"Deque.class"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("inlineCode",{parentName:"p"},"Deque")," \u662f ",Object(l.b)("inlineCode",{parentName:"p"},"double ended queue")," \u7684\u7b80\u79f0")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public interface Deque<E> extends Queue<E> {\n    void addFirst(E e);\n    void addLast(E e);\n    boolean offerFirst(E e);\n    boolean offerLast(E e);\n    E removeFirst();\n    E removeLast();\n    E pollFirst();\n    E pollLast();\n    E getFirst();\n    E getLast();\n    E peekFirst();\n    E peekLast();\n    boolean removeFirstOccurrence(Object o);\n    boolean removeLastOccurrence(Object o);\n\n    // *** Queue methods ***\n    boolean add(E e);\n    boolean offer(E e);\n    E remove();\n    E poll();\n    E element();\n    E peek();\n    boolean addAll(Collection<? extends E> c);\n\n    // *** Stack methods ***\n    void push(E e);\n    E pop();\n\n    // *** Collection methods ***\n    boolean remove(Object o);\n    boolean contains(Object o);\n    int size();\n    Iterator<E> iterator();\n    Iterator<E> descendingIterator();\n}\n")),Object(l.b)("h3",{id:"queueclass"},"Queue.class"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"public interface Queue<E> extends Collection<E> {\n    // \u5165\u961f\u5c3e\n    boolean add(E e);\n    // \u5165\u961f\u5c3e\n    boolean offer(E e);\n    // \u5220\u9664\u5934\u90e8\u5143\u7d20\n    E remove();\n    // \u8fd4\u56de\u548c\u5220\u9664\u5934\u90e8\u5143\u7d20\n    E poll();\n    // \u8fd4\u8d27\u5934\u7ed3\u70b9\u5143\u7d20\u7684\u503c\n    E peek();\n}\n")),Object(l.b)("h2",{id:"vector"},"Vector"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Vector \u662f\u77e2\u91cf\u961f\u5217\uff0c\u652f\u6301\u76f8\u5173\u7684\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u3001\u904d\u5386\u7b49\u529f\u80fd"),Object(l.b)("li",{parentName:"ol"},"Vector\u4e2d\u7684\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684"),Object(l.b)("li",{parentName:"ol"},"\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u6307\u5b9a\u6269\u5bb9\u7684\u5927\u5c0f")),Object(l.b)("h3",{id:"\u67b6\u6784\u56fe"},"\u67b6\u6784\u56fe"),Object(l.b)("p",null,Object(l.b)("img",{src:t(492).default})),Object(l.b)("h3",{id:"\u6e90\u7801-1"},"\u6e90\u7801"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'public class Vector<E>\n    extends AbstractList<E>\n    implements List<E>, RandomAccess, Cloneable, java.io.Serializable\n{\n    // \u4fdd\u5b58Vector\u4e2d\u6570\u636e\u7684\u6570\u7ec4\n    protected Object[] elementData;\n    // \u5b9e\u9645\u6570\u636e\u7684\u6570\u91cf\n    protected int elementCount;\n\n    // \u5bb9\u91cf\u589e\u957f\u7cfb\u6570\n    protected int capacityIncrement;\n\n    // \u6784\u9020\u51fd\u6570\u6307\u5b9a\u521d\u59cb\u5bb9\u91cf\n    public Vector() {\n        this(10);\n    }\n\n    // \u6307\u5b9aVector"\u5bb9\u91cf\u5927\u5c0f"\u548c"\u589e\u957f\u7cfb\u6570"\u7684\u6784\u9020\u51fd\u6570\n    public Vector(int initialCapacity, int capacityIncrement) {\n        super();\n        if (initialCapacity < 0)\n            throw new IllegalArgumentException("Illegal Capacity: "+\n                                               initialCapacity);\n        this.elementData = new Object[initialCapacity];\n        this.capacityIncrement = capacityIncrement;\n    }\n\n    // \u6dfb\u52a0\u5143\u7d20 synchronized\n    public synchronized boolean add(E e) {\n        modCount++;\n        add(e, elementData, elementCount);\n        return true;\n    }\n\n    // \u6269\u5bb9\n    private void add(E e, Object[] elementData, int s) {\n        if (s == elementData.length)\n            elementData = grow();\n        elementData[s] = e;\n        elementCount = s + 1;\n    }\n\n    private Object[] grow(int minCapacity) {\n        return elementData = Arrays.copyOf(elementData,\n                                           newCapacity(minCapacity));\n    }\n\n    private Object[] grow() {\n        return grow(elementCount + 1);\n    }\n\n    private int newCapacity(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        // \u6269\u5bb9\u5927\u5c0f \u539f\u59cb\u5bb9\u91cf+\u589e\u957f\u7cfb\u6570\n        int newCapacity = oldCapacity + ((capacityIncrement > 0) ?\n                                         capacityIncrement : oldCapacity);\n        if (newCapacity - minCapacity <= 0) {\n            if (minCapacity < 0) // overflow\n                throw new OutOfMemoryError();\n            return minCapacity;\n        }\n\n        return (newCapacity - MAX_ARRAY_SIZE <= 0)\n            ? newCapacity\n            : hugeCapacity(minCapacity);\n    }\n\n    private static int hugeCapacity(int minCapacity) {\n        if (minCapacity < 0) // overflow\n            throw new OutOfMemoryError();\n        return (minCapacity > MAX_ARRAY_SIZE) ?\n            Integer.MAX_VALUE :\n            MAX_ARRAY_SIZE;\n    }\n\n    public synchronized Object[] toArray() {\n        return Arrays.copyOf(elementData, elementCount);\n    }\n}\n')))}p.isMDXComponent=!0},270:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),p=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=p(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,m=u["".concat(r,".").concat(d)]||u[d]||b[d]||l;return t?i.a.createElement(m,c(c({ref:n},s),{},{components:t})):i.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=d;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var s=2;s<l;s++)r[s]=t[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},490:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/arraylist-19b1a3f4fe67ec77b04a2d171d6b99df.png"},491:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/linkedlist-f02554fb6fac6f5038984d3444b7e603.png"},492:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/Vector-6732a8fbc5addbd35eaf9382ce114b0c.png"}}]);