(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7955],{3905:function(n,t,e){"use strict";e.d(t,{Zo:function(){return u},kt:function(){return d}});var o=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,o,a=function(n,t){if(null==n)return{};var e,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)e=r[o],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)e=r[o],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var s=o.createContext({}),c=function(n){var t=o.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},u=function(n){var t=c(n.components);return o.createElement(s.Provider,{value:t},n.children)},p={inlineCode:"code",wrapper:function(n){var t=n.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(n,t){var e=n.components,a=n.mdxType,r=n.originalType,s=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),g=c(e),d=a,f=g["".concat(s,".").concat(d)]||g[d]||p[d]||r;return e?o.createElement(f,i(i({ref:t},u),{},{components:e})):o.createElement(f,i({ref:t},u))}));function d(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var r=e.length,i=new Array(r);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var c=2;c<r;c++)i[c]=e[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,e)}g.displayName="MDXCreateElement"},80574:function(n,t,e){"use strict";e.r(t),e.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var o=e(22122),a=e(19756),r=(e(67294),e(3905)),i=["components"],l={title:"\u81ea\u52a8\u914d\u7f6e"},s={unversionedId:"zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e",id:"zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e",isDocsHomePage:!1,title:"\u81ea\u52a8\u914d\u7f6e",description:"@SpringBootApplication",source:"@site/docs/zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e.md",sourceDirName:"zoology/spring-family/springboot",slug:"/zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e",editUrl:"https://github.com/Goldwood1024/docs.advanced.way/tree/master/docs/zoology/spring-family/springboot/\u81ea\u52a8\u914d\u7f6e.md",version:"current",lastUpdatedAt:1622711894,formattedLastUpdatedAt:"6/3/2021",frontMatter:{title:"\u81ea\u52a8\u914d\u7f6e"},sidebar:"spring",previous:{title:"\u8d77\u6b65\u4f9d\u8d56",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/\u8d77\u6b65\u4f9d\u8d56"},next:{title:"\u7cfb\u7edf\u6307\u6807\u76d1\u63a7",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/\u7cfb\u7edf\u6307\u6807\u76d1\u63a7"}},c=[{value:"@SpringBootApplication",id:"springbootapplication",children:[{value:"\u539f\u7406\u56fe",id:"\u539f\u7406\u56fe",children:[]}]},{value:"@EnableAutoConfiguration",id:"enableautoconfiguration",children:[{value:"@AutoConfigurationPackage",id:"autoconfigurationpackage",children:[]},{value:"@Import",id:"import",children:[]},{value:"AutoConfigurationImportSelector",id:"autoconfigurationimportselector",children:[]}]}],u={toc:c};function p(n){var t=n.components,l=(0,a.Z)(n,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"springbootapplication"},"@SpringBootApplication"),(0,r.kt)("h3",{id:"\u539f\u7406\u56fe"},"\u539f\u7406\u56fe"),(0,r.kt)("p",null,(0,r.kt)("img",{src:e(18661).Z})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = { \n            @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n            @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) \n        })\npublic @interface SpringBootApplication {\n    @AliasFor(annotation = EnableAutoConfiguration.class)\n    Class<?>[] exclude() default {};\n\n    @AliasFor(annotation = EnableAutoConfiguration.class)\n    String[] excludeName() default {};\n\n    // \u7ec4\u4ef6\u626b\u63cf\u7684\u57fa\u672c\u5305\n    @AliasFor(annotation = ComponentScan.class, attribute = "basePackages")\n    String[] scanBasePackages() default {};\n\n    @AliasFor(annotation = ComponentScan.class, attribute = "basePackageClasses")\n    Class<?>[] scanBasePackageClasses() default {};\n\n    @AliasFor(annotation = ComponentScan.class, attribute = "nameGenerator")\n    Class<? extends BeanNameGenerator> nameGenerator() default BeanNameGenerator.class;\n\n    @AliasFor(annotation = Configuration.class)\n    boolean proxyBeanMethods() default true;\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"@SpringBootConfiguration\n\u6807\u6ce8\u5f53\u524d\u7c7b\u662f\u914d\u7f6e\u7c7b\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u7ee7\u627f\u81ea ",(0,r.kt)("inlineCode",{parentName:"li"},"@Configuration"),"\u3002")),(0,r.kt)("p",null,"\u5e76\u4f1a\u5c06\u5f53\u524d\u7c7b\u5185\u58f0\u660e\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"@Bean")," \u6ce8\u89e3\u6807\u8bb0\u7684\u65b9\u6cd5\u7684\u5b9e\u4f8b\u7eb3\u5165\u5230srping\u5bb9\u5668\u4e2d\uff0c\u5e76\u4e14\u5b9e\u4f8b\u540d\u5c31\u662f\u65b9\u6cd5\u540d"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"@EnableAutoConfiguration")),(0,r.kt)("p",null,"\u662f\u81ea\u52a8\u914d\u7f6e\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u4f1a\u6839\u636e\u6211\u4eec\u6dfb\u52a0\u7684\u7ec4\u4ef6jar\u6765\u5b8c\u6210\u4e00\u4e9b\u9ed8\u8ba4\u914d\u7f6e"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"@ComponentScan")),(0,r.kt)("p",null,"\u626b\u63cf\u5f53\u524d\u5305\u53ca\u5176\u5b50\u5305\u4e0b\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"@Component")," ",(0,r.kt)("inlineCode",{parentName:"p"},"@Controller")," ",(0,r.kt)("inlineCode",{parentName:"p"},"@Service")," ",(0,r.kt)("inlineCode",{parentName:"p"},"@Repository")," \u7b49\u6ce8\u89e3\u6807\u8bb0\u7684\u7c7b\u5e76\u7eb3\u5165\u5230spring\u5bb9\u5668\u4e2d\u8fdb\u884c\u7ba1\u7406"),(0,r.kt)("h2",{id:"enableautoconfiguration"},"@EnableAutoConfiguration"),(0,r.kt)("p",null,"\u5bfc\u5165 ",(0,r.kt)("inlineCode",{parentName:"p"},"AutoConfigurationImportSelector")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@AutoConfigurationPackage\n@Import(AutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n\n    String ENABLED_OVERRIDE_PROPERTY = "spring.boot.enableautoconfiguration";\n\n    Class<?>[] exclude() default {};\n\n    String[] excludeName() default {};\n\n}\n')),(0,r.kt)("h3",{id:"autoconfigurationpackage"},"@AutoConfigurationPackage"),(0,r.kt)("p",null,"\u4f5c\u7528\u662f\u5c06 \u6dfb\u52a0\u8be5\u6ce8\u89e3\u7684\u7c7b\u6240\u5728\u7684package \u4f5c\u4e3a \u81ea\u52a8\u914d\u7f6epackage \u8fdb\u884c\u7ba1\u7406"),(0,r.kt)("h3",{id:"import"},"@Import"),(0,r.kt)("p",null,"@Import\u901a\u8fc7\u5feb\u901f\u5bfc\u5165\u7684\u65b9\u5f0f\u5b9e\u73b0\u628a\u5b9e\u4f8b\u52a0\u5165spring\u7684IOC\u5bb9\u5668\u4e2d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u6536\u96c6\u9700\u8981\u5bfc\u5165\u7684\u914d\u7f6e\u7c7b\npublic interface ImportSelector {\n    String[] selectImports(AnnotationMetadata importingClassMetadata);\n    default Predicate<String> getExclusionFilter() {\n        return null;\n    }\n}\n")),(0,r.kt)("h3",{id:"autoconfigurationimportselector"},"AutoConfigurationImportSelector"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class AutoConfigurationImportSelector implements DeferredImportSelector, BeanClassLoaderAware,\n        ResourceLoaderAware, BeanFactoryAware, EnvironmentAware, Ordered {\n\n    @Override\n    public String[] selectImports(AnnotationMetadata annotationMetadata) {\n        if (!isEnabled(annotationMetadata)) {\n            return NO_IMPORTS;\n        }\n        AutoConfigurationEntry autoConfigurationEntry = getAutoConfigurationEntry(annotationMetadata);\n        return StringUtils.toStringArray(autoConfigurationEntry.getConfigurations());\n    }\n\n    protected AutoConfigurationEntry getAutoConfigurationEntry(AnnotationMetadata annotationMetadata) {\n        if (!isEnabled(annotationMetadata)) {\n            return EMPTY_ENTRY;\n        }\n        AnnotationAttributes attributes = getAttributes(annotationMetadata);\n        List<String> configurations = getCandidateConfigurations(annotationMetadata, attributes);\n        configurations = removeDuplicates(configurations);\n        Set<String> exclusions = getExclusions(annotationMetadata, attributes);\n        checkExcludedClasses(configurations, exclusions);\n        configurations.removeAll(exclusions);\n        configurations = getConfigurationClassFilter().filter(configurations);\n        fireAutoConfigurationImportEvents(configurations, exclusions);\n        return new AutoConfigurationEntry(configurations, exclusions);\n    }\n\n    // \u4ece  META-INF/spring.factories \u6587\u4ef6\u52a0\u8f7d EnableAutoConfiguration \u6ce8\u89e3\u7684\u7c7b\n    protected List<String> getCandidateConfigurations(AnnotationMetadata metadata, AnnotationAttributes attributes) {\n        // \u52a0\u8f7d spring.factories \u6587\u4ef6\n        List<String> configurations = SpringFactoriesLoader.loadFactoryNames(getSpringFactoriesLoaderFactoryClass(),\n                getBeanClassLoader());\n        Assert.notEmpty(configurations, "No auto configuration classes found in META-INF/spring.factories. If you "\n                + "are using a custom packaging, make sure that file is correct.");\n        return configurations;\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"spring-boot-autoconfigure-**.jar")," jar\u6587\u4ef6\u4e0b ",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/spring.factories")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/spring.factories")," \u7528\u6765\u52a0\u8f7d\u5916\u90e8jar\u7684\u914d\u7f6e")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"// \u6ce8\u89e3\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n// redis \u81ea\u52a8\u914d\u7f6e\norg.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\\n")),(0,r.kt)("p",null,"\u914d\u7f6e\u7c7b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration(proxyBeanMethods = false)\n// \u6761\u4ef6\u52a0\u8f7d\n@ConditionalOnClass(RedisOperations.class)\n// \u52a0\u8f7d\u53c2\u6570\n@EnableConfigurationProperties(RedisProperties.class)\n// \u5bfc\u5165 \u914d\u7f6e\u7c7b\n@Import({ LettuceConnectionConfiguration.class, JedisConnectionConfiguration.class })\npublic class RedisAutoConfiguration {\n\n    // \u6ce8\u5165Bean\n    @Bean\n    @ConditionalOnMissingBean(name = "redisTemplate")\n    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory)\n            throws UnknownHostException {\n        RedisTemplate<Object, Object> template = new RedisTemplate<>();\n        template.setConnectionFactory(redisConnectionFactory);\n        return template;\n    }\n\n    @Bean\n    @ConditionalOnMissingBean\n    public StringRedisTemplate stringRedisTemplate(RedisConnectionFactory redisConnectionFactory)\n            throws UnknownHostException {\n        StringRedisTemplate template = new StringRedisTemplate();\n        template.setConnectionFactory(redisConnectionFactory);\n        return template;\n    }\n\n}\n')))}p.isMDXComponent=!0},18661:function(n,t,e){"use strict";t.Z=e.p+"assets/images/v2-ec490d9baecef2b0ff77af59598c8c12_1440w-142f08f02705c1ad8f0200e31de0e027.jpg"}}]);