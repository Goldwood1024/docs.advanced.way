(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7351],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=l,v=c["".concat(i,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(v,o(o({ref:t},u),{},{components:n})):r.createElement(v,o({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},50606:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return p},default:function(){return d}});var r=n(22122),l=n(19756),a=(n(67294),n(3905)),o=["components"],s={title:"\u6838\u5fc3\u7ec4\u4ef6"},i={unversionedId:"zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6",id:"zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6",isDocsHomePage:!1,title:"\u6838\u5fc3\u7ec4\u4ef6",description:"LocaleResolver",source:"@site/docs/zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6.md",sourceDirName:"zoology/spring-family/springmvc",slug:"/zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6",permalink:"/docs.advanced.way/docs/zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6",editUrl:"https://github.com/Goldwood1024/docs.advanced.way/tree/master/docs/zoology/spring-family/springmvc/\u6838\u5fc3\u7ec4\u4ef6.md",version:"current",lastUpdatedAt:1622711894,formattedLastUpdatedAt:"6/3/2021",frontMatter:{title:"\u6838\u5fc3\u7ec4\u4ef6"},sidebar:"spring",previous:{title:"\u7b80\u4ecb",permalink:"/docs.advanced.way/docs/zoology/spring-family/springmvc/\u7b80\u4ecb"},next:{title:"Servlet",permalink:"/docs.advanced.way/docs/zoology/spring-family/springmvc/Servlet"}},p=[{value:"LocaleResolver",id:"localeresolver",children:[{value:"Locale",id:"locale",children:[]},{value:"\u63a5\u53e3\u5b9a\u4e49 LocaleResolver",id:"\u63a5\u53e3\u5b9a\u4e49-localeresolver",children:[]},{value:"AcceptHeaderLocaleResolver",id:"acceptheaderlocaleresolver",children:[]},{value:"\u56fd\u9645\u5316\u914d\u7f6e",id:"\u56fd\u9645\u5316\u914d\u7f6e",children:[]}]},{value:"ThemeResolver",id:"themeresolver",children:[{value:"ThemeResolver \u63a5\u53e3",id:"themeresolver-\u63a5\u53e3",children:[]},{value:"FixedThemeResolver",id:"fixedthemeresolver",children:[]}]},{value:"MultipartResolver",id:"multipartresolver",children:[{value:"MultipartResolver \u63a5\u53e3",id:"multipartresolver-\u63a5\u53e3",children:[]},{value:"StandardServletMultipartResolver",id:"standardservletmultipartresolver",children:[]},{value:"StandardMultipartHttpServletRequest",id:"standardmultiparthttpservletrequest",children:[]},{value:"\u6587\u4ef6\u4e0a\u4f20",id:"\u6587\u4ef6\u4e0a\u4f20",children:[]}]},{value:"HandlerMapping",id:"handlermapping",children:[]},{value:"HandlerAdapter",id:"handleradapter",children:[{value:"HandlerAdapter \u63a5\u53e3",id:"handleradapter-\u63a5\u53e3",children:[]},{value:"HttpRequestHandlerAdapter",id:"httprequesthandleradapter",children:[]},{value:"SimpleControllerHandlerAdapter",id:"simplecontrollerhandleradapter",children:[]},{value:"RequestMappingHandlerAdapter",id:"requestmappinghandleradapter",children:[]}]},{value:"HandlerExceptionResolver",id:"handlerexceptionresolver",children:[{value:"HandlerExceptionResolver \u63a5\u53e3",id:"handlerexceptionresolver-\u63a5\u53e3",children:[]},{value:"AbstractHandlerExceptionResolver",id:"abstracthandlerexceptionresolver",children:[]},{value:"ExceptionHandlerExceptionResolver",id:"exceptionhandlerexceptionresolver",children:[]},{value:"ResponseStatusExceptionResolver",id:"responsestatusexceptionresolver",children:[]},{value:"\u7edf\u4e00\u5f02\u5e38\u5904\u7406",id:"\u7edf\u4e00\u5f02\u5e38\u5904\u7406",children:[]}]}],u={toc:p};function d(e){var t=e.components,s=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"localeresolver"},"LocaleResolver"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"}," Locale ","[l\u0259\u028a\u02c8k\u0251\u02d0l]","\uff0c resolver ","[ri\u02d0'z\u0252lv\u0259]")),(0,a.kt)("p",null,"\u533a\u57df\u5904\u7406\u5668\u7528\u6765\u8bc6\u522b\u7528\u6237\u7684\u5730\u533a\uff0c\u53ef\u4ee5\u5b9e\u73b0\u56fd\u9645\u5316"),(0,a.kt)("h3",{id:"locale"},"Locale"),(0,a.kt)("p",null,"\u8868\u793a\u8bed\u8a00\u548c\u56fd\u5bb6/\u5730\u533a\u4fe1\u606f\u7684\u672c\u5730\u5316\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public final class Locale implements Cloneable, Serializable {\n    static public final Locale US = createConstant("en", "US");\n    static public final Locale SIMPLIFIED_CHINESE = createConstant("zh", "CN");\n}\n')),(0,a.kt)("h3",{id:"\u63a5\u53e3\u5b9a\u4e49-localeresolver"},"\u63a5\u53e3\u5b9a\u4e49 LocaleResolver"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface LocaleResolver {\n    // \u89e3\u6790\u5f53\u524d\u8bf7\u6c42\uff0c\u83b7\u53d6\u8bf7\u6c42\u5bf9\u5e94\u7684Locale\n    Locale resolveLocale(HttpServletRequest request);\n    // \u8bbe\u7f6e\u5f53\u524d\u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u5e94\u7684Locale\n    void setLocale(HttpServletRequest request, @Nullable HttpServletResponse response, @Nullable Locale locale);\n}\n")),(0,a.kt)("h3",{id:"acceptheaderlocaleresolver"},"AcceptHeaderLocaleResolver"),(0,a.kt)("p",null,"\u68c0\u9a8cHTTP\u8bf7\u6c42\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"accept-language")," \u5934\u90e8\u6765\u89e3\u6790\u533a\u57df\uff0cspringmvc \u9ed8\u8ba4\u7684\u5904\u7406\u673a\u5236"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class AcceptHeaderLocaleResolver implements LocaleResolver {\n    @Override\n    public Locale resolveLocale(HttpServletRequest request) {\n        // \u83b7\u53d6\u9ed8\u8ba4\u7684 Locale\n        Locale defaultLocale = getDefaultLocale();\n        // Accept-Language \u4e3a\u7a7a\uff0c\u8fd4\u56de defaultLocale\n        if (defaultLocale != null && request.getHeader("Accept-Language") == null) {\n            return defaultLocale;\n        }\n\n        // \u83b7\u53d6\u8bf7\u6c42Locale\uff0c\u5e95\u5c42\u901a\u8fc7\u89e3\u6790\u5934\u90e8 Accept-Language\n        Locale requestLocale = request.getLocale();\n        // \u627e\u5230\u672c\u5730\u5b9e\u4f8b\u914d\u7f6e\u7684\u652f\u6301\u7684Locale\u5217\u8868\n        List<Locale> supportedLocales = getSupportedLocales();\n        // \u652f\u6301\u7684\u5217\u8868\u4e3a\u7a7a\uff0c\u6216\u652f\u6301 requestLocale\uff0c\u76f4\u63a5\u8fd4\u56de\n        if (supportedLocales.isEmpty() || supportedLocales.contains(requestLocale)) {\n            return requestLocale;\n        }\n        // supportedLocales \u4e0d\u4e3a\u7a7a\u4e14\u8bf7\u6c42\u7684Locale\u652f\u6301\u7684\u5217\u8868\u5185\n        Locale supportedLocale = findSupportedLocale(request, supportedLocales);\n        if (supportedLocale != null) {\n            return supportedLocale;\n        }\n        return (defaultLocale != null ? defaultLocale : requestLocale);\n    }\n    \n    @Override\n    public void setLocale(HttpServletRequest request, @Nullable HttpServletResponse response, @Nullable Locale locale) {\n        // \u4e0d\u652f\u6301\u8bbe\u7f6e Locale\n        throw new UnsupportedOperationException(\n                "Cannot change HTTP accept header - use a different locale resolution strategy");\n    }\n}\n')),(0,a.kt)("h4",{id:"localecontext"},"LocaleContext"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected final void processRequest(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n    protected final void processRequest(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        long startTime = System.currentTimeMillis();\n        // \u83b7\u53d6 \u539f\u5148\u7684Locale \u4e0a\u4e0b\u6587\n        LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext();\n        // \u521b\u5efa\u65b0\u7684Locale \u4e0a\u4e0b\u6587\n        LocaleContext localeContext = buildLocaleContext(request);\n    }\n    \n        \n    @Nullable\n    protected LocaleContext buildLocaleContext(HttpServletRequest request) {\n        return new SimpleLocaleContext(request.getLocale());\n    }\n")),(0,a.kt)("h3",{id:"\u56fd\u9645\u5316\u914d\u7f6e"},"\u56fd\u9645\u5316\u914d\u7f6e"),(0,a.kt)("h4",{id:"\u6b65\u9aa4"},"\u6b65\u9aa4"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6dfb\u52a0\u5bf9\u5e94\u7684\u6587\u4ef6\u56fd\u9645\u5316\u6587\u4ef6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"messages.properties")," \u9ed8\u8ba4"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"messages_zh_CN.properties")," \u4e2d\u6587"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"messages_en_US.properties")," \u82f1\u6587")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"# \u5185\u5bb9\nmessage=\u6210\u529f\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u83b7\u53d6 ",(0,a.kt)("inlineCode",{parentName:"li"},"MessageSource"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// \u628a MessageSource \u6ce8\u5165spring\n@Autowired\nprivate MessageSource messageSource;\n\n// \u83b7\u53d6\u4e0a\u4e0b\u6587\u4e2d\u7684Locale\nLocale locale = LocaleContextHolder.getLocale();\nString msg = messageSource.getMessage("message", null, locale)\n// msg=\u6210\u529f\n')),(0,a.kt)("h4",{id:"\u539f\u7406"},"\u539f\u7406"),(0,a.kt)("p",null,"MessageSource \u63a5\u53e3\uff0c\u4ee5\u7528\u4e8e\u652f\u6301\u4fe1\u606f\u7684\u56fd\u9645\u5316\u548c\u5305\u542b\u53c2\u6570\u7684\u4fe1\u606f\u7684\u66ff\u6362\u3002"),(0,a.kt)("h2",{id:"themeresolver"},"ThemeResolver"),(0,a.kt)("p",null,"\u4e3b\u9898\u89e3\u6790\u5668\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"org.springframework.web.servlet.theme")," \u5305\u4e0b\u4e3b\u9898\u76f8\u5173\u7c7b"),(0,a.kt)("h3",{id:"themeresolver-\u63a5\u53e3"},"ThemeResolver \u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface ThemeResolver {\n    // \u6839\u636e\u8bf7\u6c42\u89e3\u6790\u4e3b\u9898\u540d\n    String resolveThemeName(HttpServletRequest request);\n    // \u8bbe\u7f6e\u4e3b\u9898\u540d\n    void setThemeName(HttpServletRequest request, @Nullable HttpServletResponse response, @Nullable String themeName);\n}\n")),(0,a.kt)("h3",{id:"fixedthemeresolver"},"FixedThemeResolver"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u7684\u4e3b\u9898\u89e3\u6790\u5668\u5b9e\u73b0\u7c7b"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(40360).Z})),(0,a.kt)("h4",{id:"fixedthemeresolver-1"},"FixedThemeResolver"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class FixedThemeResolver extends AbstractThemeResolver {\n\n    @Override\n    public String resolveThemeName(HttpServletRequest request) {\n        // \u8c03\u7528 AbstractThemeResolver.getDefaultThemeName()\n        return getDefaultThemeName();\n    }\n\n    @Override\n    public void setThemeName(HttpServletRequest request, @Nullable HttpServletResponse response, @Nullable String themeName) {\n\n        throw new UnsupportedOperationException("Cannot change theme - use a different theme resolution strategy");\n    }\n}\n')),(0,a.kt)("h4",{id:"abstractthemeresolver"},"AbstractThemeResolver"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public abstract class AbstractThemeResolver implements ThemeResolver {\n    // \u5b9a\u4e49\u9ed8\u8ba4\u7684\u4e3b\u9898\u540d\u79f0\n    public static final String ORIGINAL_DEFAULT_THEME_NAME = "theme";\n    private String defaultThemeName = ORIGINAL_DEFAULT_THEME_NAME;\n    \n    public void setDefaultThemeName(String defaultThemeName) {\n        this.defaultThemeName = defaultThemeName;\n    }\n    public String getDefaultThemeName() {\n        return this.defaultThemeName;\n    }\n\n}\n')),(0,a.kt)("h2",{id:"multipartresolver"},"MultipartResolver"),(0,a.kt)("h3",{id:"multipartresolver-\u63a5\u53e3"},"MultipartResolver \u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface MultipartResolver {\n    // \u5224\u65ad\u662f\u4f5b\u662f\u591a\u5757\u8bf7\u6c42\n    boolean isMultipart(HttpServletRequest request);\n    // \u89e3\u6790\u591a\u5757\u8bf7\u6c42\uff0c\u8fd4\u56de\u65b0\u7684 MultipartHttpServletRequest\uff0c\u5c01\u88c5\u591a\u5757\u8bf7\u6c42\u7684\u76f8\u5173\u65b9\u6cd5\u548c\u5c5e\u6027\n    MultipartHttpServletRequest resolveMultipart(HttpServletRequest request) throws MultipartException;\n    // \u8bf7\u6c42\u5b8c\u6210\u540e\u6e05\u7406\u64cd\u4f5c\n    void cleanupMultipart(MultipartHttpServletRequest request);\n}\n")),(0,a.kt)("h3",{id:"standardservletmultipartresolver"},"StandardServletMultipartResolver"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u5b9e\u73b0\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class StandardServletMultipartResolver implements MultipartResolver {\n    private boolean resolveLazily = false;\n    public void setResolveLazily(boolean resolveLazily) {\n        this.resolveLazily = resolveLazily;\n    }\n\n    @Override\n    public boolean isMultipart(HttpServletRequest request) {\n        // \u5224\u65ad ContentType \u662f\u5426\u662f\u4ee5 \'multipart/\' \u4e3a\u524d\u7f00\n        return StringUtils.startsWithIgnoreCase(request.getContentType(), "multipart/");\n    }\n\n    @Override\n    public MultipartHttpServletRequest resolveMultipart(HttpServletRequest request) throws MultipartException {\n        // \u8fd4\u56de StandardMultipartHttpServletRequest\n        return new StandardMultipartHttpServletRequest(request, this.resolveLazily);\n    }\n\n    @Override\n    public void cleanupMultipart(MultipartHttpServletRequest request) {\n        if (!(request instanceof AbstractMultipartHttpServletRequest) ||\n                ((AbstractMultipartHttpServletRequest) request).isResolved()) {\n            try {\n                // \u904d\u5386\u6240\u6709\u7684\u8bf7\u6c42\u5757\n                for (Part part : request.getParts()) {\n                    // \u5982\u679c\u5bf9\u4e8e\u7684\u8bf7\u6c42\u5757\u5305\u542b\u6587\u4ef6\uff0c\u5219\u5220\u9664\u6587\u4ef6\n                    if (request.getFile(part.getName()) != null) {\n                        part.delete();\n                    }\n                }\n            }\n            catch (Throwable ex) {\n                LogFactory.getLog(getClass()).warn("Failed to perform cleanup of multipart items", ex);\n            }\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"standardmultiparthttpservletrequest"},"StandardMultipartHttpServletRequest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class StandardMultipartHttpServletRequest extends AbstractMultipartHttpServletRequest {\n    @Nullable\n    private Set<String> multipartParameterNames;\n    \n    public StandardMultipartHttpServletRequest(HttpServletRequest request, boolean lazyParsing)\n            throws MultipartException {\n\n        super(request);\n        if (!lazyParsing) {\n            // \u89e3\u6790\u8bf7\u6c42\n            parseRequest(request);\n        }\n    }\n    \n    private void parseRequest(HttpServletRequest request) {\n        try {\n            // \u83b7\u53d6\u8bf7\u6c42\u5757\n            Collection<Part> parts = request.getParts();\n            // \u4fdd\u5b58\u8bf7\u6c42\u5757\u7684\u53c2\u6570\u540d\u79f0\n            this.multipartParameterNames = new LinkedHashSet<>(parts.size());\n            // \u4fdd\u5b58\u8bf7\u6c42\u6587\u4ef6\n            MultiValueMap<String, MultipartFile> files = new LinkedMultiValueMap<>(parts.size());\n            for (Part part : parts) {\n                // \u83b7\u53d6\u8bf7\u6c42\u5934 Content-Disposition \u7684\u503c\n                String headerValue = part.getHeader(HttpHeaders.CONTENT_DISPOSITION);\n                // \u89e3\u6790 Content-Disposition \u7684\u503c\n                ContentDisposition disposition = ContentDisposition.parse(headerValue);\n                // \u6587\u4ef6\u540d\u79f0\n                String filename = disposition.getFilename();\n                if (filename != null) {\n                    if (filename.startsWith("=?") && filename.endsWith("?=")) {\n                        filename = MimeDelegate.decode(filename);\n                    }\n\n                    // \u4fdd\u5b58\u6587\u4ef6\n                    files.add(part.getName(), new StandardMultipartFile(part, filename));\n                }\n                else {\n                    // \u4e0d\u662f\u6587\u4ef6\u7c7b\u578b\u7684\u8bf7\u6c42\uff0c\u5c06\u5757\u540d\u79f0\u653e\u5165\u8bf7\u6c42\u53c2\u6570\u96c6\u5408\n                    this.multipartParameterNames.add(part.getName());\n                }\n            }\n            // \u5728\u672c\u5b9e\u4f8b\u4fdd\u5b58\u591a\u5757\u8bf7\u6c42\uff0c\u9632\u6b62\u88ab\u7be1\u6539\n            setMultipartFiles(files);\n        }\n        catch (Throwable ex) {\n            handleParseFailure(ex);\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"\u6587\u4ef6\u4e0a\u4f20"},"\u6587\u4ef6\u4e0a\u4f20"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4f9d\u8d56\u5f15\u5165")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>commons-fileupload</groupId>\n    <artifactId>commons-fileupload</artifactId>\n    <version>1.3.2</version>\n</dependency>\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u524d\u7aef\u4e0a\u4f20")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<form action="/upload" enctype="multipart/form-data" method="post">\n    <input type="file" name="file"><br><br>\n    <input type="submit" value="\u4e0a\u4f20">\n</form>\n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"\u540e\u53f0\u63a5\u6536")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@RequestMapping("/upload")\npublic String upload(@RequestParam("file") MultipartFile file, HttpServletRequest req)\n        throws IllegalStateException, IOException {\n    // \u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a\u7a7a\uff0c\u7a7a\u5219\u8fd4\u56de\u5931\u8d25\u9875\u9762\n    if (file.isEmpty()) {\n        return "failed";\n    }\n    \n    // \u83b7\u53d6\u6587\u4ef6\u5b58\u50a8\u8def\u5f84\uff08\u7edd\u5bf9\u8def\u5f84\uff09\n    String path = req.getServletContext().getRealPath("/WEB-INF/file");\n    // \u83b7\u53d6\u539f\u6587\u4ef6\u540d\n    String fileName = file.getOriginalFilename();\n    // \u521b\u5efa\u6587\u4ef6\u5b9e\u4f8b\n    File filePath = new File(path, fileName);\n    // \u5982\u679c\u6587\u4ef6\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u76ee\u5f55\n    if (!filePath.getParentFile().exists()) {\n        filePath.getParentFile().mkdirs();\n        System.out.println("\u521b\u5efa\u76ee\u5f55" + filePath);\n    }\n    // \u5199\u5165\u6587\u4ef6\n    file.transferTo(filePath);\n    return "success";\n}  \n')),(0,a.kt)("h2",{id:"handlermapping"},"HandlerMapping"),(0,a.kt)("h2",{id:"handleradapter"},"HandlerAdapter"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Adapter ","[\u0259'd\xe6pt\u0259]")),(0,a.kt)("p",null,"\u5904\u7406\u9002\u914d\u5668"),(0,a.kt)("h3",{id:"handleradapter-\u63a5\u53e3"},"HandlerAdapter \u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface HandlerAdapter {\n    // \u5224\u65ad\u8be5\u5904\u7406\u9002\u914d\u5668\u662f\u5426\u652f\u6301\u8fd9\u4e2a\u5904\u7406\u5668\n    boolean supports(Object handler);\n    // \u6267\u884c\u6838\u5fc3\u5904\u7406\u903b\u8f91\uff0c\u8fd4\u56de ModelAndView\n    ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception;\n    // \u6700\u8fd1\u4e00\u6b21\u7684\u4fee\u6539\u65f6\u95f4\n    long getLastModified(HttpServletRequest request, Object handler);\n}\n")),(0,a.kt)("h3",{id:"httprequesthandleradapter"},"HttpRequestHandlerAdapter"),(0,a.kt)("p",null,"\u9002\u914d ",(0,a.kt)("inlineCode",{parentName:"p"},"HttpRequestHandler")," \u7c7b\u578b\u7684\u5904\u7406\u5668"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class HttpRequestHandlerAdapter implements HandlerAdapter {\n\n    @Override\n    public boolean supports(Object handler) {\n        return (handler instanceof HttpRequestHandler);\n    }\n\n    @Override\n    @Nullable\n    public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n\n        ((HttpRequestHandler) handler).handleRequest(request, response);\n        return null;\n    }\n\n    @Override\n    public long getLastModified(HttpServletRequest request, Object handler) {\n        if (handler instanceof LastModified) {\n            return ((LastModified) handler).getLastModified(request);\n        }\n        return -1L;\n    }\n\n}\n")),(0,a.kt)("h3",{id:"simplecontrollerhandleradapter"},"SimpleControllerHandlerAdapter"),(0,a.kt)("p",null,"\u9002\u914d ",(0,a.kt)("inlineCode",{parentName:"p"},"ControllerHandler")," \u7684\u9002\u914d\u5668"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class SimpleControllerHandlerAdapter implements HandlerAdapter {\n\n    @Override\n    public boolean supports(Object handler) {\n        return (handler instanceof Controller);\n    }\n\n    @Override\n    @Nullable\n    public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n\n        return ((Controller) handler).handleRequest(request, response);\n    }\n\n    @Override\n    public long getLastModified(HttpServletRequest request, Object handler) {\n        if (handler instanceof LastModified) {\n            return ((LastModified) handler).getLastModified(request);\n        }\n        return -1L;\n    }\n\n}\n")),(0,a.kt)("h3",{id:"requestmappinghandleradapter"},"RequestMappingHandlerAdapter"),(0,a.kt)("p",null,"\u9002\u914d ",(0,a.kt)("inlineCode",{parentName:"p"},"HandlerMethod"),"\uff08\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"@RequestMapping"),"\uff09 \u7684\u5904\u7406\u5668"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(31313).Z})),(0,a.kt)("h4",{id:"abstracthandlermethodadapter"},"AbstractHandlerMethodAdapter"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"HandlerAdapter")," \u7684\u62bd\u8c61\u5b9e\u73b0\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class AbstractHandlerMethodAdapter extends WebContentGenerator implements HandlerAdapter, Ordered {\n    @Override\n    public final boolean supports(Object handler) {\n        // \u5224\u65ad handler \u662f\u5426 HandlerMethod \u7c7b\u578b\u7684\n        // supportsInternal \u4ea4\u7ed9\u5b50\u7c7b RequestMappingHandlerAdapter \u5b9e\u73b0\uff0c\u9ed8\u8ba4\u8fd4\u56detrue\n        return (handler instanceof HandlerMethod && supportsInternal((HandlerMethod) handler));\n    }\n    \n    // \u5b50\u7c7b RequestMappingHandlerAdapter \u5b9e\u73b0\uff0c\u9ed8\u8ba4\u8fd4\u56detrue\n    protected abstract boolean supportsInternal(HandlerMethod handlerMethod);\n    \n    @Override\n    @Nullable\n    public final ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        // \u6267\u884c\u5904\u7406\u5668\uff0c\u4ea4\u7ed9 RequestMappingHandlerAdapter \u5904\u7406\n        return handleInternal(request, response, (HandlerMethod) handler);\n    }\n\n    @Nullable\n    protected abstract ModelAndView handleInternal(HttpServletRequest request,\n            HttpServletResponse response, HandlerMethod handlerMethod) throws Exception;\n    @Override\n\n\n    public final long getLastModified(HttpServletRequest request, Object handler) {\n        return getLastModifiedInternal(request, (HandlerMethod) handler);\n    }\n\n    protected abstract long getLastModifiedInternal(HttpServletRequest request, HandlerMethod handlerMethod);\n}\n")),(0,a.kt)("h4",{id:"requestmappinghandleradapter-1"},"RequestMappingHandlerAdapter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class RequestMappingHandlerAdapter extends AbstractHandlerMethodAdapter\n        implements BeanFactoryAware, InitializingBean {\n\n    @Override\n    protected boolean supportsInternal(HandlerMethod handlerMethod) {\n        return true;\n    }\n}\n")),(0,a.kt)("h2",{id:"handlerexceptionresolver"},"HandlerExceptionResolver"),(0,a.kt)("p",null,"\u5f02\u5e38\u89e3\u6790\u5668"),(0,a.kt)("h3",{id:"handlerexceptionresolver-\u63a5\u53e3"},"HandlerExceptionResolver \u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface HandlerExceptionResolver {\n    @Nullable\n    ModelAndView resolveException(\n            HttpServletRequest request, HttpServletResponse response, @Nullable Object handler, Exception ex);\n}\n")),(0,a.kt)("h3",{id:"abstracthandlerexceptionresolver"},"AbstractHandlerExceptionResolver"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public abstract class AbstractHandlerExceptionResolver implements HandlerExceptionResolver, Ordered {\n    @Override\n    @Nullable\n    public ModelAndView resolveException(\n            HttpServletRequest request, HttpServletResponse response, @Nullable Object handler, Exception ex) {\n        // \u5224\u65ad\u6b64\u5f02\u5e38\u5904\u7406\u5668\u662f\u5426\u5bf9\u8be5\u8bf7\u6c42\u548c\u5904\u7406\u5668\u63d0\u4f9b\u652f\u6301\n        if (shouldApplyTo(request, handler)) {\n            // \u9884\u5904\u7406\u54cd\u5e94\n            prepareResponse(ex, response);\n            // \u89e3\u6790\u5f02\u5e38\uff0c\u5b50\u7c7b\u5b9e\u73b0\n            ModelAndView result = doResolveException(request, response, handler, ex);\n            // \u6253\u5370\u7ed3\u679c\n            if (result != null) {\n                // Print debug message when warn logger is not enabled.\n                if (logger.isDebugEnabled() && (this.warnLogger == null || !this.warnLogger.isWarnEnabled())) {\n                    logger.debug("Resolved [" + ex + "]" + (result.isEmpty() ? "" : " to " + result));\n                }\n                // Explicitly configured warn logger in logException method.\n                logException(ex, request);\n            }\n            return result;\n        }\n        else {\n            return null;\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"exceptionhandlerexceptionresolver"},"ExceptionHandlerExceptionResolver"),(0,a.kt)("p",null,"\u7528\u4e8e\u5904\u7406 ",(0,a.kt)("inlineCode",{parentName:"p"},"@ExceptionHandler")," \u7684\u914d\u7f6e\u7684\u5f02\u5e38\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class ExceptionHandlerExceptionResolver extends AbstractHandlerMethodExceptionResolver\n        implements ApplicationContextAware, InitializingBean {\n}\n")),(0,a.kt)("h3",{id:"responsestatusexceptionresolver"},"ResponseStatusExceptionResolver"),(0,a.kt)("p",null,"\u5904\u7406 ",(0,a.kt)("inlineCode",{parentName:"p"},"@ResponseStatus"),"\u6ce8\u89e3\u7684\u5f02\u5e38\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class ResponseStatusExceptionResolver extends AbstractHandlerExceptionResolver implements MessageSourceAware {\n    // \u56fd\u7ea7\u5316\u4fe1\u606f\n    private MessageSource messageSource;\n\n    @Override\n    @Nullable\n    protected ModelAndView doResolveException(\n            HttpServletRequest request, HttpServletResponse response, @Nullable Object handler, Exception ex) {\n\n        try {\n            if (ex instanceof ResponseStatusException) {\n                return resolveResponseStatusException((ResponseStatusException) ex, request, response, handler);\n            }\n\n            ResponseStatus status = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);\n            if (status != null) {\n                // \u5904\u7406\u5f02\u5e38\u4fe1\u606f\n                return resolveResponseStatus(status, request, response, handler, ex);\n            }\n\n            if (ex.getCause() instanceof Exception) {\n                // \u9012\u5f52\u8c03\u7528\n                return doResolveException(request, response, handler, (Exception) ex.getCause());\n            }\n        }\n        catch (Exception resolveEx) {\n            if (logger.isWarnEnabled()) {\n                logger.warn("Failure while trying to resolve exception [" + ex.getClass().getName() + "]", resolveEx);\n            }\n        }\n        return null;\n    }\n}\n')),(0,a.kt)("h3",{id:"\u7edf\u4e00\u5f02\u5e38\u5904\u7406"},"\u7edf\u4e00\u5f02\u5e38\u5904\u7406"),(0,a.kt)("h4",{id:"controlleradvice-\u6ce8\u89e3"},"@ControllerAdvice \u6ce8\u89e3"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"}," Advice ","[\u0259d\u02c8va\u026as]")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@ControllerAdvice")," ",(0,a.kt)("inlineCode",{parentName:"li"},"@RestControllerAdvice")," \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u63a7\u5236\u5668\u589e\u5f3a\u7c7b"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@ExceptionHandler")," \u58f0\u660e\u6355\u83b7\u7684\u5f02\u5e38")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// @ControllerAdvice\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n    @ExceptionHandler(NullPointerException.class)\n    public String nullPointerException(HttpServletResponse response, NullPointerException ex){\n        return "this is error msg!";\n    }\n}\n')),(0,a.kt)("h4",{id:"errorcontroller"},"ErrorController"),(0,a.kt)("p",null,"\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0 ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrorController")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@RestController\npublic class HttpErrorController implements ErrorController {\n\n    private final static String ERROR_PATH = "/error";\n\n    @RequestMapping(path = ERROR_PATH)\n    public String error(HttpServletRequest request, HttpServletResponse response) {\n        return "";\n    }\n\n    @Override\n    public String getErrorPath() {\n        return ERROR_PATH;\n    }\n}\n')),(0,a.kt)("h4",{id:"\u533a\u522b"},"\u533a\u522b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u6ce8\u89e3 ",(0,a.kt)("inlineCode",{parentName:"p"},"@ControllerAdvice")," \u65b9\u5f0f\u53ea\u80fd\u5904\u7406\u63a7\u5236\u5668\u629b\u51fa\u7684\u5f02\u5e38\u3002\u6b64\u65f6\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u63a7\u5236\u5668\u4e2d\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u7c7b ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrorController")," \u65b9\u5f0f\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7684\u5f02\u5e38\uff0c\u5305\u62ec\u672a\u8fdb\u5165\u63a7\u5236\u5668\u7684\u9519\u8bef\uff0c\u6bd4\u5982404,401\u7b49\u9519\u8bef")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u5982\u679c\u5e94\u7528\u4e2d\u4e24\u8005\u5171\u540c\u5b58\u5728\uff0c\u5219 ",(0,a.kt)("inlineCode",{parentName:"p"},"@ControllerAdvice")," \u65b9\u5f0f\u5904\u7406\u63a7\u5236\u5668\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u7c7b ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrorController")," \u65b9\u5f0f\u5904\u7406\u672a\u8fdb\u5165\u63a7\u5236\u5668\u7684\u5f02\u5e38\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"@ControllerAdvice")," \u65b9\u5f0f\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u62e6\u622a\u65b9\u6cd5\uff0c\u62e6\u622a\u4e0d\u540c\u7684\u5f02\u5e38\u7c7b\uff0c\u5e76\u4e14\u53ef\u4ee5\u83b7\u53d6\u629b\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\uff0c\u81ea\u7531\u5ea6\u66f4\u5927"))))}d.isMDXComponent=!0},40360:function(e,t,n){"use strict";t.Z=n.p+"assets/images/FixedThemeResolver-3ed1e9c50994c95b2228b1ef52a230ff.png"},31313:function(e,t,n){"use strict";t.Z=n.p+"assets/images/RequestMappingHandlerAdapter-f2b4b8fca17bc10f24accdc18a7e255b.png"}}]);