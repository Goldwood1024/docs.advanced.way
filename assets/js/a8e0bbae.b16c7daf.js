(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3043],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),g=p(t),d=i,m=g["".concat(l,".").concat(d)]||g[d]||u[d]||a;return t?r.createElement(m,o(o({ref:e},c),{},{components:t})):r.createElement(m,o({ref:e},c))}));function d(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,o=new Array(a);o[0]=g;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s.mdxType="string"==typeof n?n:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},92548:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var r=t(22122),i=t(19756),a=(t(67294),t(3905)),o=["components"],s={title:"\u5982\u4f55\u542f\u52a8"},l={unversionedId:"zoology/spring-family/springboot/springboot\u542f\u52a8",id:"zoology/spring-family/springboot/springboot\u542f\u52a8",isDocsHomePage:!1,title:"\u5982\u4f55\u542f\u52a8",description:"\u542f\u52a8\u8fc7\u7a0b",source:"@site/docs/zoology/spring-family/springboot/springboot\u542f\u52a8.md",sourceDirName:"zoology/spring-family/springboot",slug:"/zoology/spring-family/springboot/springboot\u542f\u52a8",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/springboot\u542f\u52a8",editUrl:"https://github.com/Goldwood1024/docs.advanced.way/tree/master/docs/zoology/spring-family/springboot/springboot\u542f\u52a8.md",version:"current",lastUpdatedAt:1625551523,formattedLastUpdatedAt:"7/6/2021",frontMatter:{title:"\u5982\u4f55\u542f\u52a8"},sidebar:"spring",previous:{title:"SPI",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/spi"},next:{title:"\u5e38\u7528\u6ce8\u89e3",permalink:"/docs.advanced.way/docs/zoology/spring-family/springboot/\u5e38\u7528\u6ce8\u89e3"}},p=[{value:"\u542f\u52a8\u8fc7\u7a0b",id:"\u542f\u52a8\u8fc7\u7a0b",children:[{value:"\u6d41\u7a0b\u56fe",id:"\u6d41\u7a0b\u56fe",children:[]},{value:"main\u65b9\u6cd5",id:"main\u65b9\u6cd5",children:[]},{value:"SpringApplication",id:"springapplication",children:[]},{value:"run",id:"run",children:[]}]},{value:"StopWatch",id:"stopwatch",children:[]},{value:"\u8fd0\u884c\u76d1\u542c\u5668",id:"\u8fd0\u884c\u76d1\u542c\u5668",children:[{value:"\u6d41\u7a0b",id:"\u6d41\u7a0b",children:[]},{value:"SpringApplicationRunListeners",id:"springapplicationrunlisteners",children:[]},{value:"SpringApplicationRunListener",id:"springapplicationrunlistener",children:[]},{value:"EventPublishingRunListener",id:"eventpublishingrunlistener",children:[]},{value:"\u81ea\u5b9a\u4e49\u76d1\u542c\u5668",id:"\u81ea\u5b9a\u4e49\u76d1\u542c\u5668",children:[]}]},{value:"\u6253\u5370 Banner",id:"\u6253\u5370-banner",children:[]},{value:"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf",id:"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf",children:[{value:"Environment",id:"environment",children:[]}]},{value:"\u521b\u5efa\u5e94\u7528\u4e0a\u4e0b\u6587",id:"\u521b\u5efa\u5e94\u7528\u4e0a\u4e0b\u6587",children:[]},{value:"\u5f02\u5e38\u4e0a\u62a5\u5904\u7406",id:"\u5f02\u5e38\u4e0a\u62a5\u5904\u7406",children:[]},{value:"\u5237\u65b0\u4e0a\u4e0b\u6587",id:"\u5237\u65b0\u4e0a\u4e0b\u6587",children:[]},{value:"\u542f\u52a8 Runner",id:"\u542f\u52a8-runner",children:[{value:"\u6267\u884c\u539f\u7406",id:"\u6267\u884c\u539f\u7406",children:[]},{value:"\u8bbe\u7f6e\u6267\u884c\u987a\u5e8f",id:"\u8bbe\u7f6e\u6267\u884c\u987a\u5e8f",children:[]}]}],c={toc:p};function u(n){var e=n.components,s=(0,i.Z)(n,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,s,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u542f\u52a8\u8fc7\u7a0b"},"\u542f\u52a8\u8fc7\u7a0b"),(0,a.kt)("h3",{id:"\u6d41\u7a0b\u56fe"},"\u6d41\u7a0b\u56fe"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(86756).Z})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u521b\u5efa SpringApplication"),(0,a.kt)("li",{parentName:"ol"},"\u6267\u884c SpringApplication.run()")),(0,a.kt)("h3",{id:"main\u65b9\u6cd5"},"main\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@SpringBootApplication\npublic class SpringBootDemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootDemoApplication.class, args);\n    }\n}\n")),(0,a.kt)("h3",{id:"springapplication"},"SpringApplication"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class SpringApplication {\n    // \u542f\u52a8\u65b9\u6cd5\n    public static ConfigurableApplicationContext run(Class<?> primarySource, String... args) {\n        return run(new Class<?>[] { primarySource }, args);\n    }\n\n    // \u521b\u5efa \u5e94\u7528\n    public static ConfigurableApplicationContext run(Class<?>[] primarySources, String[] args) {\n        // run(args)\n        return new SpringApplication(primarySources).run(args);\n    }\n\n    // \u6784\u9020\u51fd\u6570\n    public SpringApplication(Class<?>... primarySources) {\n        this(null, primarySources);\n    }\n\n    public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {\n        //1\u3001\u521d\u59cb\u5316\u8d44\u6e90\u52a0\u8f7d\u5668\n        this.resourceLoader = resourceLoader;\n        //2\u3001\u65ad\u8a00\u8d44\u6e90\u52a0\u8f7d\u7c7b\u4e0d\u80fd\u4e3a null\n        Assert.notNull(primarySources, "PrimarySources must not be null");\n        //3\u3001\u521d\u59cb\u5316\u52a0\u8f7d\u8d44\u6e90\u7c7b\u96c6\u5408\u5e76\u53bb\u91cd\n        this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources));\n        //4\u3001\u63a8\u65ad\u5e94\u7528\u7c7b\u578b\u662fStandard\u8fd8\u662fWeb\n        this.webApplicationType = WebApplicationType.deduceFromClasspath();\n        //5\u3001\u8bbe\u7f6e\u5e94\u7528\u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u5668\n        setInitializers((Collection)getSpringFactoriesInstances(ApplicationContextInitializer.class));\n        //6\u3001\u8bbe\u7f6e\u76d1\u542c\u5668\n        setListeners((Collection)getSpringFactoriesInstances(ApplicationListener.class));\n        //7\u3001\u63a8\u65ad\u5e94\u7528\u5165\u53e3\u7c7b\n        this.mainApplicationClass = deduceMainApplicationClass();\n    }\n\n    private Class<?> deduceMainApplicationClass() {\n        try {\n            StackTraceElement[] stackTrace = new RuntimeException().getStackTrace();\n            for (StackTraceElement stackTraceElement : stackTrace) {\n                // \u67e5\u627e main \u65b9\u6cd5\n                if ("main".equals(stackTraceElement.getMethodName())) {\n                    return Class.forName(stackTraceElement.getClassName());\n                }\n            }\n        }\n        catch (ClassNotFoundException ex) {\n            // Swallow and continue\n        }\n        return null;\n    }\n\n    private <T> Collection<T> getSpringFactoriesInstances(Class<T> type) {\n        return getSpringFactoriesInstances(type, new Class<?>[] {});\n    }\n\n// \u4f7f\u7528 SpringFactoriesLoader \u52a0\u8f7d\u914d\u7f6e\u7c7b\n    private <T> Collection<T> getSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, Object... args) {\n        // \u83b7\u53d6\u7c7b\u52a0\u8f7d\u5668\n        ClassLoader classLoader = getClassLoader();\n        \n        Set<String> names = new LinkedHashSet<>(SpringFactoriesLoader.loadFactoryNames(type, classLoader));\n        // \u521b\u5efa\u914d\u7f6e\u7c7b\u5b9e\u4f8b\n        List<T> instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);\n        // \u6392\u5e8f\u914d\u7f6e\u7c7b\u5b9e\u4f8b\n        AnnotationAwareOrderComparator.sort(instances);\n        return instances;\n    }\n\n// \u521b\u5efa\u914d\u7f6e\u7c7b\u5b9e\u4f8b\n    private <T> List<T> createSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes,\n            ClassLoader classLoader, Object[] args, Set<String> names) {\n        List<T> instances = new ArrayList<>(names.size());\n        for (String name : names) {\n            try {\n                // \u53cd\u5c04\u521b\u5efa\u5b9e\u4f8b\n                Class<?> instanceClass = ClassUtils.forName(name, classLoader);\n                Assert.isAssignable(type, instanceClass);\n                Constructor<?> constructor = instanceClass.getDeclaredConstructor(parameterTypes);\n                T instance = (T) BeanUtils.instantiateClass(constructor, args);\n                instances.add(instance);\n            }\n            catch (Throwable ex) {\n                throw new IllegalArgumentException("Cannot instantiate " + type + " : " + name, ex);\n            }\n        }\n        return instances;\n    }\n\n    public ClassLoader getClassLoader() {\n        if (this.resourceLoader != null) {\n            return this.resourceLoader.getClassLoader();\n        }\n        // \u9ed8\u8ba4\u7684\u7c7b\u52a0\u8f7d\u5668\n        return ClassUtils.getDefaultClassLoader();\n    }\n}\n')),(0,a.kt)("h4",{id:"springfactoriesloader"},"SpringFactoriesLoader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public final class SpringFactoriesLoader {\n    // \u4f4d\u7f6e\n    public static final String FACTORIES_RESOURCE_LOCATION = "META-INF/spring.factories";\n    // \u7f13\u5b58\n    private static final Map<ClassLoader, MultiValueMap<String, String>> cache = new ConcurrentReferenceHashMap<>();\n\n    public static List<String> loadFactoryNames(Class<?> factoryType, @Nullable ClassLoader classLoader) {\n        String factoryTypeName = factoryType.getName();\n        return loadSpringFactories(classLoader).getOrDefault(factoryTypeName, Collections.emptyList());\n    }\n\n    private static Map<String, List<String>> loadSpringFactories(@Nullable ClassLoader classLoader) {\n        MultiValueMap<String, String> result = cache.get(classLoader);\n        if (result != null) {\n            return result;\n        }\n\n        try {\n            Enumeration<URL> urls = (classLoader != null ?\n                    classLoader.getResources(FACTORIES_RESOURCE_LOCATION) :\n                    ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n            result = new LinkedMultiValueMap<>();\n            while (urls.hasMoreElements()) {\n                URL url = urls.nextElement();\n                UrlResource resource = new UrlResource(url);\n                Properties properties = PropertiesLoaderUtils.loadProperties(resource);\n                for (Map.Entry<?, ?> entry : properties.entrySet()) {\n                    String factoryTypeName = ((String) entry.getKey()).trim();\n                    for (String factoryImplementationName : StringUtils.commaDelimitedListToStringArray((String) entry.getValue())) {\n                        result.add(factoryTypeName, factoryImplementationName.trim());\n                    }\n                }\n            }\n            cache.put(classLoader, result);\n            return result;\n        }\n        catch (IOException ex) {\n            throw new IllegalArgumentException("Unable to load factories from location [" +\n                    FACTORIES_RESOURCE_LOCATION + "]", ex);\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"run"},"run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class SpringApplication {\n    private static final String SYSTEM_PROPERTY_JAVA_AWT_HEADLESS = "java.awt.headless";\n\n    public static final String DEFAULT_SERVLET_WEB_CONTEXT_CLASS = "org.springframework.boot."\n            + "web.servlet.context.AnnotationConfigServletWebServerApplicationContext";\n\n    public ConfigurableApplicationContext run(String... args) {\n        // StopWatch\u662f\u4e00\u4e2a\u8ba1\u65f6\u7c7b\uff0c\u7528\u6765\u8bb0\u5f55\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u7ed3\u675f\u65f6\u95f4\u7b49\n        StopWatch stopWatch = new StopWatch();\n        // \u8bb0\u5f55\n        stopWatch.start();\n        // \u58f0\u660e\u4e0a\u4e0b\u6587\n        ConfigurableApplicationContext context = null;\n        // \u5f02\u5e38\u62a5\u544a\u5668\n        Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>();\n        configureHeadlessProperty();\n        // \u83b7\u53d6\u76d1\u542c\u5668\n        SpringApplicationRunListeners listeners = getRunListeners(args);\n        // \u6267\u884c\u76d1\u542c\u5668\n        listeners.starting();\n        try {\n            ApplicationArguments applicationArguments = new DefaultApplicationArguments(args);\n            // \u914d\u7f6e\u73af\u5883\n            ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);\n            configureIgnoreBeanInfo(environment);\n            // \u6253\u5370Banner\n            Banner printedBanner = printBanner(environment);\n            // \u521b\u5efa\u5e94\u7528\u4e0a\u4e0b\u6587\n            context = createApplicationContext();\n            exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,\n                    new Class[] { ConfigurableApplicationContext.class }, context);\n\n            // \u51c6\u5907\u4e0a\u4e0b\u6587\n            prepareContext(context, environment, listeners, applicationArguments, printedBanner);\n            // \u5237\u65b0\u4e0a\u4e0b\u6587\n            refreshContext(context);\n            // \u5237\u65b0\u4e0a\u4e0b\u6587\u540e\u6267\u884c \u7559\u7ed9\u5b50\u7c7b\u6269\u5c55\n            afterRefresh(context, applicationArguments);\n            // \u505c\u6b62\u8ba1\u65f6\u5668\n            stopWatch.stop();\n            if (this.logStartupInfo) {\n                new StartupInfoLogger(this.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);\n            }\n            // \u5f00\u59cb\u6267\u884c\u76d1\u542c\u5668\n            listeners.started(context);\n            // \u8c03\u7528 Runner \u7c7b\n            callRunners(context, applicationArguments);\n        }\n        catch (Throwable ex) {\n            handleRunFailure(context, ex, exceptionReporters, listeners);\n            throw new IllegalStateException(ex);\n        }\n\n        try {\n            // \u76d1\u542c\u5668\u6267\u884c\u4e2d\n            listeners.running(context);\n        }\n        catch (Throwable ex) {\n            handleRunFailure(context, ex, exceptionReporters, null);\n            throw new IllegalStateException(ex);\n        }\n        return context;\n    }\n\n    private void configureHeadlessProperty() {\n        System.setProperty(SYSTEM_PROPERTY_JAVA_AWT_HEADLESS,\n                System.getProperty(SYSTEM_PROPERTY_JAVA_AWT_HEADLESS, Boolean.toString(this.headless)));\n    }\n\n    private SpringApplicationRunListeners getRunListeners(String[] args) {\n        Class<?>[] types = new Class<?>[] { SpringApplication.class, String[].class };\n        return new SpringApplicationRunListeners(logger,\n                getSpringFactoriesInstances(SpringApplicationRunListener.class, types, this, args));\n    }\n\n    private ConfigurableEnvironment prepareEnvironment(SpringApplicationRunListeners listeners,\n            ApplicationArguments applicationArguments) {\n        // \u83b7\u53d6\u6216\u521b\u5efa\u914d\u7f6e\u73af\u5883\n        ConfigurableEnvironment environment = getOrCreateEnvironment();\n        configureEnvironment(environment, applicationArguments.getSourceArgs());\n        ConfigurationPropertySources.attach(environment);\n        listeners.environmentPrepared(environment);\n        bindToSpringApplication(environment);\n        if (!this.isCustomEnvironment) {\n            environment = new EnvironmentConverter(getClassLoader()).convertEnvironmentIfNecessary(environment,\n                    deduceEnvironmentClass());\n        }\n        ConfigurationPropertySources.attach(environment);\n        return environment;\n    }\n\n    protected ConfigurableApplicationContext createApplicationContext() {\n        Class<?> contextClass = this.applicationContextClass;\n        if (contextClass == null) {\n            try {\n                // web l\u7c7b\u578b\n                switch (this.webApplicationType) {\n                case SERVLET:\n                    contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS);\n                    break;\n                case REACTIVE:\n                    contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);\n                    break;\n                default:\n                    contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);\n                }\n            }\n            catch (ClassNotFoundException ex) {\n                throw new IllegalStateException(\n                        "Unable create a default ApplicationContext, please specify an ApplicationContextClass", ex);\n            }\n        }\n        return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);\n    }\n}\n')),(0,a.kt)("h2",{id:"stopwatch"},"StopWatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class StopWatch {\n    private final String id;\n\n    private boolean keepTaskList = true;\n\n    private final List<TaskInfo> taskList = new LinkedList<>();\n\n    /** Start time of the current task. */\n    private long startTimeNanos;\n\n    /** Name of the current task. */\n    @Nullable\n    private String currentTaskName;\n\n    @Nullable\n    private TaskInfo lastTaskInfo;\n\n    private int taskCount;\n\n    /** Total running time. */\n    private long totalTimeNanos;\n\n    public void start(String taskName) throws IllegalStateException {\n        if (this.currentTaskName != null) {\n            throw new IllegalStateException(\"Can't start StopWatch: it's already running\");\n        }\n        this.currentTaskName = taskName;\n        this.startTimeNanos = System.nanoTime();\n    }\n\n    public void stop() throws IllegalStateException {\n        if (this.currentTaskName == null) {\n            throw new IllegalStateException(\"Can't stop StopWatch: it's not running\");\n        }\n        long lastTime = System.nanoTime() - this.startTimeNanos;\n        this.totalTimeNanos += lastTime;\n        this.lastTaskInfo = new TaskInfo(this.currentTaskName, lastTime);\n        if (this.keepTaskList) {\n            this.taskList.add(this.lastTaskInfo);\n        }\n        ++this.taskCount;\n        this.currentTaskName = null;\n    }\n}\n")),(0,a.kt)("h2",{id:"\u8fd0\u884c\u76d1\u542c\u5668"},"\u8fd0\u884c\u76d1\u542c\u5668"),(0,a.kt)("p",null,"\u7528\u6765\u5728\u6574\u4e2a\u542f\u52a8\u6d41\u7a0b\u4e2d\u63a5\u6536\u4e0d\u540c\u6267\u884c\u70b9\u4e8b\u4ef6\u901a\u77e5\u7684\u76d1\u542c\u8005"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\uff2dETA-INF/spring.factories ApplicationContextInitializer\u3001ApplicationListener\u3001SpringBootExceptionReporter SpringApplicationRunListeners \u7b49\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b")),(0,a.kt)("h3",{id:"\u6d41\u7a0b"},"\u6d41\u7a0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// SpringApplication.run()\nSpringApplicationRunListeners listeners = getRunListeners(args);\nlisteners.starting();\nlisteners.started(context);\nlisteners.running(context);\n\n// \u89e3\u6790 \uff2dETA-INF/spring.factories\nprivate SpringApplicationRunListeners getRunListeners(String[] args) {\n    Class<?>[] types = new Class<?>[] { SpringApplication.class, String[].class };\n    return new SpringApplicationRunListeners(logger,\n            getSpringFactoriesInstances(SpringApplicationRunListener.class, types, this, args));\n}\n\n// \u52a0\u8f7d\u5e76\u5b9e\u4f8b\u5316 SpringApplicationRunListeners\nprivate <T> Collection<T> getSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, Object... args) {\n    ClassLoader classLoader = getClassLoader();\n    // Use names and ensure unique to protect against duplicates\n    Set<String> names = new LinkedHashSet<>(SpringFactoriesLoader.loadFactoryNames(type, classLoader));\n    List<T> instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);\n    AnnotationAwareOrderComparator.sort(instances);\n    return instances;\n}\n")),(0,a.kt)("h3",{id:"springapplicationrunlisteners"},"SpringApplicationRunListeners"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SpringApplicationRunListeners")," \u5c01\u88c5\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"SpringApplicationRunListener")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class SpringApplicationRunListeners {\n\n    private final List<SpringApplicationRunListener> listeners;\n\n    void starting() {\n        for (SpringApplicationRunListener listener : this.listeners) {\n            listener.starting();\n        }\n    }\n\n    void started(ConfigurableApplicationContext context) {\n        for (SpringApplicationRunListener listener : this.listeners) {\n            listener.started(context);\n        }\n    }\n\n    void running(ConfigurableApplicationContext context) {\n        for (SpringApplicationRunListener listener : this.listeners) {\n            listener.running(context);\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"springapplicationrunlistener"},"SpringApplicationRunListener"),(0,a.kt)("p",null,"\u8fd0\u884c\u76d1\u542c\u5668\u5b9a\u4e49\u548c\u5b9e\u73b0\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface SpringApplicationRunListener {\n    // \u5f00\u59cb\u542f\u52a8\n    default void starting() {\n    }\n\n//\u73af\u5883\u5efa\u7acb\u597d\u65f6\u5019\n    default void environmentPrepared(ConfigurableEnvironment environment) {\n    }\n//\u4e0a\u4e0b\u6587\u5efa\u7acb\u597d\u7684\u65f6\u5019\n    default void contextPrepared(ConfigurableApplicationContext context) {\n    }\n //\u4e0a\u4e0b\u6587\u8f7d\u5165\u914d\u7f6e\u65f6\u5019\n    default void contextLoaded(ConfigurableApplicationContext context) {\n    }\n// \u5df2\u542f\u52a8\n    default void started(ConfigurableApplicationContext context) {\n    }\n\n// \u6b63\u5728\u8fd0\u884c\n    default void running(ConfigurableApplicationContext context) {\n    }\n// \u542f\u52a8\u5931\u8d25\n    default void failed(ConfigurableApplicationContext context, Throwable exception) {\n    }\n}\n")),(0,a.kt)("h3",{id:"eventpublishingrunlistener"},"EventPublishingRunListener"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// \u5b9e\u73b0\u7c7b\npublic class EventPublishingRunListener implements SpringApplicationRunListener, Ordered {\n    private final SpringApplication application;\n    private final String[] args;\n    // \u4e8b\u4ef6\u5e7f\u64ad\u5668\n    private final SimpleApplicationEventMulticaster initialMulticaster;\n\n    public EventPublishingRunListener(SpringApplication application, String[] args) {\n        this.application = application;\n        this.args = args;\n        this.initialMulticaster = new SimpleApplicationEventMulticaster();\n        for (ApplicationListener<?> listener : application.getListeners()) {\n            this.initialMulticaster.addApplicationListener(listener);\n        }\n    }\n\n    @Override\n    public void starting() {\n        this.initialMulticaster.multicastEvent(new ApplicationStartingEvent(this.application, this.args));\n    }\n\n    @Override\n    public void started(ConfigurableApplicationContext context) {\n        // \u53d1\u5e03\u65f6\u95f4\n        context.publishEvent(new ApplicationStartedEvent(this.application, this.args, context));\n        AvailabilityChangeEvent.publish(context, LivenessState.CORRECT);\n    }\n\n    @Override\n    public void running(ConfigurableApplicationContext context) {\n        context.publishEvent(new ApplicationReadyEvent(this.application, this.args, context));\n        AvailabilityChangeEvent.publish(context, ReadinessState.ACCEPTING_TRAFFIC);\n    }\n}\n")),(0,a.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u76d1\u542c\u5668"},"\u81ea\u5b9a\u4e49\u76d1\u542c\u5668"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 ",(0,a.kt)("inlineCode",{parentName:"li"},"SpringApplicationRunListener")," \u63a5\u53e3\uff0c\u5e76\u91cd\u5199\u76f8\u5e94\u7684\u65b9\u6cd5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package service;\npublic class CustomSpringApplicationRunListener implements SpringApplicationRunListener {\n\n    public CustomSpringApplicationRunListener(SpringApplication springApplication, String... args) {\n        // todo\n    }\n\n    @Override\n    public void started(ConfigurableApplicationContext context) {\n\n    }\n\n    @Override\n    public void running(ConfigurableApplicationContext context) {\n        System.out.println("running");\n    }\n\n    @Override\n    public void failed(ConfigurableApplicationContext context, Throwable exception) {\n\n    }\n    ...\n}\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u914d\u7f6eSPI")),(0,a.kt)("p",null,"\u914d\u7f6e ",(0,a.kt)("inlineCode",{parentName:"p"},"\uff2dETA-INF/spring.factories")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// \u52a0\u5165\u5b9e\u73b0\u7c7b\norg.springframework.boot.SpringApplicationRunListener=\\\n  service.CustomSpringApplicationRunListener\n")),(0,a.kt)("h2",{id:"\u6253\u5370-banner"},"\u6253\u5370 Banner"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs.advanced.way/docs/zoology/spring-family/springboot/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7"},"\u81ea\u5b9a\u4e49\u914d\u7f6e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// SpringApplication.run()\nBanner printedBanner = printBanner(environment);\n")),(0,a.kt)("h2",{id:"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf"},"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf"),(0,a.kt)("h3",{id:"environment"},"Environment"),(0,a.kt)("p",null,"\u5916\u90e8\u5316\u914d\u7f6e\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u4e3b\u8981\u662f\u901a\u8fc7\u5916\u90e8\u7684\u914d\u7f6e\u8d44\u6e90\u5b9e\u73b0\u4e0e\u4ee3\u7801\u7684\u76f8\u4e92\u914d\u5408\uff0c\u6765\u907f\u514d\u786c\u7f16\u7801\uff0c\u63d0\u4f9b\u5e94\u7528\u6570\u636e\u6216\u884c\u4e3a\u53d8\u5316\u7684\u7075\u6d3b\u6027"),(0,a.kt)("h4",{id:"springboot-\u52a0\u8f7d"},"springboot \u52a0\u8f7d"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class SpringApplication {\n    public ConfigurableApplicationContext run(String... args) {\n        ...\n        ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);\n    }\n\n    private ConfigurableEnvironment prepareEnvironment(SpringApplicationRunListeners listeners,\n            ApplicationArguments applicationArguments) {\n        // Create and configure the environment\n        ConfigurableEnvironment environment = getOrCreateEnvironment();\n        configureEnvironment(environment, applicationArguments.getSourceArgs());\n        ConfigurationPropertySources.attach(environment);\n        listeners.environmentPrepared(environment);\n        bindToSpringApplication(environment);\n        if (!this.isCustomEnvironment) {\n            environment = new EnvironmentConverter(getClassLoader()).convertEnvironmentIfNecessary(environment,\n                    deduceEnvironmentClass());\n        }\n        ConfigurationPropertySources.attach(environment);\n        return environment;\n    }\n\n    private ConfigurableEnvironment getOrCreateEnvironment() {\n        if (this.environment != null) {\n            return this.environment;\n        }\n        switch (this.webApplicationType) {\n        case SERVLET:\n            //  Servlet \u73af\u5883\n            return new StandardServletEnvironment();\n        case REACTIVE:\n            return new StandardReactiveWebEnvironment();\n        default:\n            return new StandardEnvironment();\n        }\n    }\n}\n\n")),(0,a.kt)("h4",{id:"environment-\u63a5\u53e3"},"Environment \u63a5\u53e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public interface Environment extends PropertyResolver {\n    // \u83b7\u53d6\u6fc0\u6d3b\u7684\u914d\u7f6e\u6587\u4ef6\n    String[] getActiveProfiles();\n    String[] getDefaultProfiles();\n    boolean acceptsProfiles(Profiles profiles);\n}\n")),(0,a.kt)("h4",{id:"standardservletenvironment"},"StandardServletEnvironment"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(27304).Z})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class StandardServletEnvironment extends StandardEnvironment implements ConfigurableWebEnvironment {\n    /** Servlet context init parameters property source name: {@value}. */\n    public static final String SERVLET_CONTEXT_PROPERTY_SOURCE_NAME = "servletContextInitParams";\n\n    /** Servlet config init parameters property source name: {@value}. */\n    public static final String SERVLET_CONFIG_PROPERTY_SOURCE_NAME = "servletConfigInitParams";\n\n    @Override\n    protected void customizePropertySources(MutablePropertySources propertySources) {\n        // \u52a0\u8f7d servlet \u53d8\u91cf\n        propertySources.addLast(new StubPropertySource(SERVLET_CONFIG_PROPERTY_SOURCE_NAME));\n        propertySources.addLast(new StubPropertySource(SERVLET_CONTEXT_PROPERTY_SOURCE_NAME));\n        if (JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable()) {\n            propertySources.addLast(new JndiPropertySource(JNDI_PROPERTY_SOURCE_NAME));\n        }\n        super.customizePropertySources(propertySources);\n    }\n}\n\n// StandardEnvironment\npublic class StandardEnvironment extends AbstractEnvironment {\n\n    /** System environment property source name: {@value}. */\n    // \u7cfb\u7edf\u5c5e\u6027\n    public static final String SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME = "systemEnvironment";\n\n    /** JVM system properties property source name: {@value}. */\n    // \u73af\u5883\u53d8\u91cf\n    public static final String SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME = "systemProperties";\n\n\n    // \u52a0\u8f7djava\u73af\u5883\u7684\u53d8\u91cf\n    @Override\n    protected void customizePropertySources(MutablePropertySources propertySources) {\n        propertySources.addLast(\n                new PropertiesPropertySource(SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME, getSystemProperties()));\n        propertySources.addLast(\n                new SystemEnvironmentPropertySource(SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME, getSystemEnvironment()));\n    }\n\n}\n')),(0,a.kt)("h4",{id:"propertysource"},"PropertySource"),(0,a.kt)("p",null,"\u914d\u7f6e\u6e90\uff0c\u5b98\u65b9\u5b9a\u4e49\u5b83\u662f\u5916\u90e8\u5316\u914d\u7f6e\u7684API\u63cf\u8ff0\u65b9\u5f0f\uff0c\u662f\u5916\u90e8\u5316\u914d\u7f6e\u7684\u4e00\u4e2a\u5a92\u4ecb"),(0,a.kt)("p",null,"name : \u5916\u90e8\u5316\u914d\u7f6e\u7684\u540d\u79f0\nsource : \u5b58\u50a8\u914d\u7f6e\u4e2d\u7684\u6570\u636e\uff0c\u5e95\u5c42\u4e00\u822c\u6570\u636e\u683c\u5f0f\u90fd\u662fkey value"),(0,a.kt)("h2",{id:"\u521b\u5efa\u5e94\u7528\u4e0a\u4e0b\u6587"},"\u521b\u5efa\u5e94\u7528\u4e0a\u4e0b\u6587"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// // SpringApplication.run()\nConfigurableApplicationContext context = null;\ncontext = createApplicationContext();\n\nprotected ConfigurableApplicationContext createApplicationContext() {\n        Class<?> contextClass = this.applicationContextClass;\n        if (contextClass == null) {\n            try {\n                // \u5224\u65ad web \u7c7b\u578b\n                switch (this.webApplicationType) {\n                case SERVLET:\n                    // org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext\n                    contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS);\n                    break;\n                case REACTIVE:\n                    contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);\n                    break;\n                default:\n                    contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);\n                }\n            }\n            catch (ClassNotFoundException ex) {\n                throw new IllegalStateException(\n                        "Unable create a default ApplicationContext, please specify an ApplicationContextClass", ex);\n            }\n        }\n        return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);\n    }\n')),(0,a.kt)("h2",{id:"\u5f02\u5e38\u4e0a\u62a5\u5904\u7406"},"\u5f02\u5e38\u4e0a\u62a5\u5904\u7406"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>();\ntry {\n    // \u521b\u5efa exceptionReporters\n    exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,\n                    new Class[] { ConfigurableApplicationContext.class }, context);\n} catch (Throwable ex) {\n    // \u53d1\u751f\u5f02\u5e38\u4e4b\u540e\uff0c\u5c31\u5c06\u5f02\u5e38\u4e0a\u62a5\u7684exceptionReporters\u5904\u7406\n    handleRunFailure(context, ex, exceptionReporters, listeners);\n    throw new IllegalStateException(ex);\n}\n\nprivate void handleRunFailure(ConfigurableApplicationContext context, Throwable exception,\n            Collection<SpringBootExceptionReporter> exceptionReporters, SpringApplicationRunListeners listeners) {\n        try {\n            try {\n                handleExitCode(context, exception);\n                if (listeners != null) {\n                    listeners.failed(context, exception);\n                }\n            }\n            finally {\n                reportFailure(exceptionReporters, exception);\n                if (context != null) {\n                    context.close();\n                }\n            }\n        }\n        catch (Exception ex) {\n            logger.warn("Unable to close ApplicationContext", ex);\n        }\n        ReflectionUtils.rethrowRuntimeException(exception);\n    }\n\n')),(0,a.kt)("h2",{id:"\u5237\u65b0\u4e0a\u4e0b\u6587"},"\u5237\u65b0\u4e0a\u4e0b\u6587"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"prepareContext(context, environment, listeners, applicationArguments, printedBanner);\nrefreshContext(context);\nafterRefresh(context, applicationArguments);\n\nprivate void refreshContext(ConfigurableApplicationContext context) {\n    refresh((ApplicationContext) context);\n    if (this.registerShutdownHook) {\n        try {\n            context.registerShutdownHook();\n        }\n        catch (AccessControlException ex) {\n            // Not allowed in some environments.\n        }\n    }\n}\n\nprotected void refresh(ApplicationContext applicationContext) {\n    Assert.isInstanceOf(ConfigurableApplicationContext.class, applicationContext);\n    refresh((ConfigurableApplicationContext) applicationContext);\n}\n\nprotected void refresh(ConfigurableApplicationContext applicationContext) {\n    applicationContext.refresh();\n}\n")),(0,a.kt)("h2",{id:"\u542f\u52a8-runner"},"\u542f\u52a8 Runner"),(0,a.kt)("p",null,"\u7528\u4e8e\u5728 springboot \u542f\u52a8\u540e\u6267\u884c\u4e00\u4e9b\u4efb\u52a1\uff0c",(0,a.kt)("a",{parentName:"p",href:"/docs.advanced.way/docs/zoology/spring-family/springboot/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7#Runner%E7%B1%BB"},"\u5b9e\u73b0\u65b9\u5f0f")),(0,a.kt)("h3",{id:"\u6267\u884c\u539f\u7406"},"\u6267\u884c\u539f\u7406"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class SpringApplication {\n    private void callRunners(ApplicationContext context, ApplicationArguments args) {\n        List<Object> runners = new ArrayList<>();\n        // \u83b7\u53d6 runner Bean \u5217\u8868\n        runners.addAll(context.getBeansOfType(ApplicationRunner.class).values());\n        runners.addAll(context.getBeansOfType(CommandLineRunner.class).values());\n        // \u6309\u58f0\u660e\u7684\u987a\u5e8f\u6392\u5e8f\n        AnnotationAwareOrderComparator.sort(runners);\n        // \u4f9d\u6b21\u542f\u52a8\n        for (Object runner : new LinkedHashSet<>(runners)) {\n            if (runner instanceof ApplicationRunner) {\n                callRunner((ApplicationRunner) runner, args);\n            }\n            if (runner instanceof CommandLineRunner) {\n                callRunner((CommandLineRunner) runner, args);\n            }\n        }\n    }\n\n// ApplicationRunner\n    private void callRunner(ApplicationRunner runner, ApplicationArguments args) {\n        try {\n            // \u6267\u884c run \u65b9\u6cd5\n            (runner).run(args);\n        }\n        catch (Exception ex) {\n            throw new IllegalStateException("Failed to execute ApplicationRunner", ex);\n        }\n    }\n\n// CommandLineRunner\n    private void callRunner(CommandLineRunner runner, ApplicationArguments args) {\n        try {\n            // \u6267\u884c run \u65b9\u6cd5\n            (runner).run(args.getSourceArgs());\n        }\n        catch (Exception ex) {\n            throw new IllegalStateException("Failed to execute CommandLineRunner", ex);\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"\u8bbe\u7f6e\u6267\u884c\u987a\u5e8f"},"\u8bbe\u7f6e\u6267\u884c\u987a\u5e8f"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AnnotationAwareOrderComparator")," \u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"OrderComparator")," \u7684\u5b50\u7c7b\uff0c\u7528\u6765\u652f\u6301Spring\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Ordered")," \u7c7b\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"@Order")," \u6ce8\u89e3\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"@Priority")," \u6ce8\u89e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class AnnotationAwareOrderComparator extends OrderComparator {\n    public static final AnnotationAwareOrderComparator INSTANCE = new AnnotationAwareOrderComparator();\n\n    public static void sort(List<?> list) {\n        if (list.size() > 1) {\n            list.sort(INSTANCE);\n        }\n    }\n}\n")))}u.isMDXComponent=!0},86756:function(n,e,t){"use strict";e.Z=t.p+"assets/images/1158841-20190707171658626-1389392187-6e5f991a701d724df47393d27a8a806a.png"},27304:function(n,e,t){"use strict";e.Z=t.p+"assets/images/StandardServletEnvironment-3d9e27b717a2470c3895c86e0fff8726.png"}}]);