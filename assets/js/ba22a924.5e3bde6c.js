(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{215:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return c}));var r=n(3),a=n(7),s=(n(0),n(269)),l={titil:"DispatcherServlet"},i={unversionedId:"framework/spring/springmvc/DispatcherServlet",id:"framework/spring/springmvc/DispatcherServlet",isDocsHomePage:!1,title:"DispatcherServlet",description:"DispatcherServlet",source:"@site/docs/framework/spring/springmvc/DispatcherServlet.md",slug:"/framework/spring/springmvc/DispatcherServlet",permalink:"/docs.advanced.way/docs/framework/spring/springmvc/DispatcherServlet",editUrl:"https://github.com/Goldwood1024/docs.advanced.way/docs/docs/framework/spring/springmvc/DispatcherServlet.md",version:"current",lastUpdatedAt:1616131278,formattedLastUpdatedAt:"3/19/2021",sidebar:"spring",previous:{title:"Session",permalink:"/docs.advanced.way/docs/framework/spring/springmvc/Session"},next:{title:"@RequestMapping",permalink:"/docs.advanced.way/docs/framework/spring/springmvc/RequestMapping"}},o=[{value:"DispatcherServlet",id:"dispatcherservlet",children:[{value:"\u7ed3\u6784\u56fe",id:"\u7ed3\u6784\u56fe",children:[]}]},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316",children:[]},{value:"\u5de5\u4f5c\u6d41\u7a0b",id:"\u5de5\u4f5c\u6d41\u7a0b",children:[{value:"\u6d41\u7a0b\u8bf4\u660e",id:"\u6d41\u7a0b\u8bf4\u660e",children:[]},{value:"\u5982\u4f55\u8fdb\u5165\u5206\u53d1\u4e2d\u5fc3",id:"\u5982\u4f55\u8fdb\u5165\u5206\u53d1\u4e2d\u5fc3",children:[]}]},{value:"\u8bf7\u6c42\u5206\u53d1\u8be6\u89e3",id:"\u8bf7\u6c42\u5206\u53d1\u8be6\u89e3",children:[{value:"\u6587\u4ef6\u4e0a\u4f20\u8bf7\u6c42",id:"\u6587\u4ef6\u4e0a\u4f20\u8bf7\u6c42",children:[]},{value:"\u67e5\u627e\u8bf7\u6c42\u5904\u7406\u5668",id:"\u67e5\u627e\u8bf7\u6c42\u5904\u7406\u5668",children:[]},{value:"\u83b7\u53d6\u5904\u7406\u9002\u914d\u5668",id:"\u83b7\u53d6\u5904\u7406\u9002\u914d\u5668",children:[]},{value:"\u5904\u7406Http\u7f13\u5b58",id:"\u5904\u7406http\u7f13\u5b58",children:[]},{value:"\u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\u94fe",id:"\u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\u94fe",children:[]},{value:"\u5904\u7406\u9002\u914d\u5668\u6267\u884c",id:"\u5904\u7406\u9002\u914d\u5668\u6267\u884c",children:[]},{value:"\u8fd4\u56de\u503c\u89c6\u56fe\u540d\u5904\u7406",id:"\u8fd4\u56de\u503c\u89c6\u56fe\u540d\u5904\u7406",children:[]},{value:"\u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\u94fe",id:"\u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\u94fe",children:[]},{value:"\u5904\u7406\u8fd4\u56de\u503c\u548c\u54cd\u5e94",id:"\u5904\u7406\u8fd4\u56de\u503c\u548c\u54cd\u5e94",children:[]},{value:"\u6267\u884c\u5b8c\u6210\u62e6\u622a\u5668\u94fe",id:"\u6267\u884c\u5b8c\u6210\u62e6\u622a\u5668\u94fe",children:[]},{value:"\u6e05\u7406\u8d44\u6e90",id:"\u6e05\u7406\u8d44\u6e90",children:[]}]}],p={toc:o};function c(e){var t=e.components,l=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},p,l,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"dispatcherservlet"},"DispatcherServlet"),Object(s.b)("p",null,"\u524d\u7aef\u63a7\u5236\u5668\u6a21\u5f0f"),Object(s.b)("h3",{id:"\u7ed3\u6784\u56fe"},"\u7ed3\u6784\u56fe"),Object(s.b)("p",null,Object(s.b)("img",{src:n(432).default})),Object(s.b)("h2",{id:"\u521d\u59cb\u5316"},"\u521d\u59cb\u5316"),Object(s.b)("p",null,Object(s.b)("img",{src:n(433).default})),Object(s.b)("h2",{id:"\u5de5\u4f5c\u6d41\u7a0b"},"\u5de5\u4f5c\u6d41\u7a0b"),Object(s.b)("p",null,Object(s.b)("img",{src:n(434).default})),Object(s.b)("h3",{id:"\u6d41\u7a0b\u8bf4\u660e"},"\u6d41\u7a0b\u8bf4\u660e"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001http\u8bf7\u6c42,\u8bf7\u6c42\u88ab\u524d\u7aef\u63a7\u5236\u5668 ",Object(s.b)("inlineCode",{parentName:"p"},"dispatcherServlet")," \u6355\u83b7")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"dispatcherServlet")," \u6839\u636e\u914d\u7f6e,\u5bf9url\u8fdb\u884c\u89e3\u6790, \u5728\u6839\u636euri\u8c03\u7528 ",Object(s.b)("inlineCode",{parentName:"p"},"HandlerMapping")," \u83b7\u53d6\u8be5 ",Object(s.b)("inlineCode",{parentName:"p"},"Handler")," \u914d\u7f6e\u7684\u6709\u5173\u5bf9\u8c61(\u5305\u62ec ",Object(s.b)("inlineCode",{parentName:"p"},"Handler")," \u5bf9\u8c61\u4ee5\u53ca ",Object(s.b)("inlineCode",{parentName:"p"},"Handler")," \u5bf9\u8c61\u5bf9\u5e94\u7684\u62e6\u622a\u5668), \u6700\u540e\u4ee5 ",Object(s.b)("inlineCode",{parentName:"p"},"HandlerExecutionChain")," \u7684\u5f62\u5f0f\u8fd4\u56de")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"dispatcherServlet")," \u6839\u636e\u83b7\u5f97\u7684 ",Object(s.b)("inlineCode",{parentName:"p"},"Handler")," ,\u9009\u62e9\u4e00\u4e2a\u5408\u9002 ",Object(s.b)("inlineCode",{parentName:"p"},"HandlerAdapter")," (\u5982\u679c\u83b7\u5f97\u6210\u529f,\u5c31\u5c06\u6267\u884c\u62e6\u622a\u5668\u5bf9\u5e94\u7684 ",Object(s.b)("inlineCode",{parentName:"p"},"preHandler")," \u65b9\u6cd5)")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"\u9002\u914d\u5668 ",Object(s.b)("inlineCode",{parentName:"p"},"HandlerAdapter")," \u5c06 ",Object(s.b)("inlineCode",{parentName:"p"},"Request")," \u4e2d\u7684\u6a21\u578b\u6570\u636e\u4f20\u5165 ",Object(s.b)("inlineCode",{parentName:"p"},"Handler(Controller)"))),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"Handler(Controller)")," \u6267\u884c\u7ed3\u675f\u540e,\u8fd4\u56de\u4e00\u4e2a ",Object(s.b)("inlineCode",{parentName:"p"},"ModelAndView")," \u5bf9\u8c61")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"\u6839\u636e\u8fd4\u56de\u7684 ",Object(s.b)("inlineCode",{parentName:"p"},"ModelAndView")," ,\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u5df2\u7ecf\u6ce8\u518c\u5230 ",Object(s.b)("inlineCode",{parentName:"p"},"Spring "),"\u5bb9\u5668\u7684 ",Object(s.b)("inlineCode",{parentName:"p"},"ViewResolver")," ,\u8fd4\u56de\u7ed9 ",Object(s.b)("inlineCode",{parentName:"p"},"dispatcherServlet"))),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"viewResolver")," \u7ed3\u5408 ",Object(s.b)("inlineCode",{parentName:"p"},"Model")," \u548c ",Object(s.b)("inlineCode",{parentName:"p"},"View")," \u6e32\u67d3\u89c6\u56fe")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"View")," \u89c6\u56fe\u8d1f\u8d23\u5c06\u6e32\u67d3\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef"))),Object(s.b)("h3",{id:"\u5982\u4f55\u8fdb\u5165\u5206\u53d1\u4e2d\u5fc3"},"\u5982\u4f55\u8fdb\u5165\u5206\u53d1\u4e2d\u5fc3"),Object(s.b)("h4",{id:"httpservlet"},"HttpServlet"),Object(s.b)("p",null,"\u8bf7\u6c42\u5148\u5230\u8fbe HttpServlet \u7684service\u65b9\u6cd5\uff0cservice\u51b3\u5b9a\u8c03\u7528\u5177\u4f53\u7684doGet\uff0cdoPost\u7b49\u65b9\u6cd5"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'// HttpServlet \u63d0\u4f9b\u4e86\u5bf9 Http \u534f\u8bae\u7684 Servlet \u5b9e\u73b0\n// GenericServlet \u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\npublic abstract class HttpServlet extends GenericServlet {\n    @Override\n    public void service(ServletRequest req, ServletResponse res)\n        throws ServletException, IOException\n    {\n        HttpServletRequest  request;\n        HttpServletResponse response;\n        \n        if (!(req instanceof HttpServletRequest &&\n                res instanceof HttpServletResponse)) {\n            throw new ServletException("non-HTTP request or response");\n        }\n\n        // \u5c06 Servlet \u8f6c\u6362\u6210 HttpServlet\n        request = (HttpServletRequest) req;\n        response = (HttpServletResponse) res;\n\n        // \u8c03\u7528\n        service(request, response);\n    }\n\n    // service \u65b9\u6cd5\n    protected void service(HttpServletRequest req, HttpServletResponse resp)\n        throws ServletException, IOException\n    {\n        // \u83b7\u53d6\u8bf7\u6c42\u65b9\u6cd5\n        String method = req.getMethod();\n\n        // \u5224\u65ad\u65b9\u6cd5\u7c7b\u578b\n        if (method.equals(METHOD_GET)) {\n            long lastModified = getLastModified(req);\n            if (lastModified == -1) {\n                // servlet doesn\'t support if-modified-since, no reason\n                // to go through further expensive logic\n                doGet(req, resp);\n            } else {\n                long ifModifiedSince = req.getDateHeader(HEADER_IFMODSINCE);\n                if (ifModifiedSince < lastModified) {\n                    // If the servlet mod time is later, call doGet()\n                    // Round down to the nearest second for a proper compare\n                    // A ifModifiedSince of -1 will always be less\n                    maybeSetLastModified(resp, lastModified);\n                    doGet(req, resp);\n                } else {\n                    resp.setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                }\n            }\n\n        } else if (method.equals(METHOD_HEAD)) {\n            long lastModified = getLastModified(req);\n            maybeSetLastModified(resp, lastModified);\n            doHead(req, resp);\n\n        } else if (method.equals(METHOD_POST)) {\n            doPost(req, resp);\n            \n        } else if (method.equals(METHOD_PUT)) {\n            doPut(req, resp);\n            \n        } else if (method.equals(METHOD_DELETE)) {\n            doDelete(req, resp);\n            \n        } else if (method.equals(METHOD_OPTIONS)) {\n            doOptions(req,resp);\n            \n        } else if (method.equals(METHOD_TRACE)) {\n            doTrace(req,resp);\n            \n        } else {\n            //\n            // Note that this means NO servlet supports whatever\n            // method was requested, anywhere on this server.\n            //\n\n            String errMsg = lStrings.getString("http.method_not_implemented");\n            Object[] errArgs = new Object[1];\n            errArgs[0] = method;\n            errMsg = MessageFormat.format(errMsg, errArgs);\n            \n            resp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED, errMsg);\n        }\n    }\n}\n')),Object(s.b)("h4",{id:"frameworkservlet"},"FrameworkServlet"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"FrameworkServlet \u91cd\u5199\u4e86 HttpServlet\u7684doGet\u7b49\u65b9\u6cd5\uff0c\u4e8e\u662f\u5c31\u4f1a\u8c03\u7528FrameworkServlet\u7684doGet\u7b49\u65b9\u6cd5")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"\u5728doGet\u7b49\u65b9\u6cd5\u4e2d\u90fd\u4f1a\u8c03\u7528 processRequest(request, response)\u65b9\u6cd5")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"\u8c03\u7528doService(request, response). \u7531\u4e8edoService\u5728FrameworkServlet\u4e2d\u4e3a\u62bd\u8c61\u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528DispatcherServlet\u91cd\u5199\u7684doService\u65b9\u6cd5"))),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {\n\n    @Override\n    protected final void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        processRequest(request, response);\n    }\n    \n    protected final void processRequest(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n\n        long startTime = System.currentTimeMillis();\n        Throwable failureCause = null;\n\n        LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext();\n        LocaleContext localeContext = buildLocaleContext(request);\n\n        RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes();\n        ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes);\n\n        WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n        asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor());\n\n        initContextHolders(request, localeContext, requestAttributes);\n\n        try {\n            // \u62bd\u8c61\u65b9\u6cd5\uff0c\u8c03\u7528 DispatcherServlet \u91cd\u5199\u7684 doService\u65b9\u6cd5\n            doService(request, response);\n        }\n        catch (ServletException | IOException ex) {\n            failureCause = ex;\n            throw ex;\n        }\n        catch (Throwable ex) {\n            failureCause = ex;\n            throw new NestedServletException("Request processing failed", ex);\n        }\n\n        finally {\n            resetContextHolders(request, previousLocaleContext, previousAttributes);\n            if (requestAttributes != null) {\n                requestAttributes.requestCompleted();\n            }\n            logResult(request, response, failureCause, asyncManager);\n            publishRequestHandledEvent(request, response, startTime, failureCause);\n        }\n    }\n}\n')),Object(s.b)("h4",{id:"dispatcherservlet-1"},"DispatcherServlet"),Object(s.b)("p",null,"\u8c03\u7528 doDispatch(request, response)"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'public class DispatcherServlet extends FrameworkServlet {\n\n    @Override\n    protected void doService(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        logRequest(request);\n\n        // Keep a snapshot of the request attributes in case of an include,\n        // to be able to restore the original attributes after the include.\n        Map<String, Object> attributesSnapshot = null;\n        if (WebUtils.isIncludeRequest(request)) {\n            attributesSnapshot = new HashMap<>();\n            Enumeration<?> attrNames = request.getAttributeNames();\n            while (attrNames.hasMoreElements()) {\n                String attrName = (String) attrNames.nextElement();\n                if (this.cleanupAfterInclude || attrName.startsWith(DEFAULT_STRATEGIES_PREFIX)) {\n                    attributesSnapshot.put(attrName, request.getAttribute(attrName));\n                }\n            }\n        }\n\n        // Make framework objects available to handlers and view objects.\n        request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE, getWebApplicationContext());\n        request.setAttribute(LOCALE_RESOLVER_ATTRIBUTE, this.localeResolver);\n        request.setAttribute(THEME_RESOLVER_ATTRIBUTE, this.themeResolver);\n        request.setAttribute(THEME_SOURCE_ATTRIBUTE, getThemeSource());\n\n        if (this.flashMapManager != null) {\n            FlashMap inputFlashMap = this.flashMapManager.retrieveAndUpdate(request, response);\n            if (inputFlashMap != null) {\n                request.setAttribute(INPUT_FLASH_MAP_ATTRIBUTE, Collections.unmodifiableMap(inputFlashMap));\n            }\n            request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE, new FlashMap());\n            request.setAttribute(FLASH_MAP_MANAGER_ATTRIBUTE, this.flashMapManager);\n        }\n\n        try {\n            doDispatch(request, response);\n        }\n        finally {\n            if (!WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) {\n                // Restore the original attribute snapshot, in case of an include.\n                if (attributesSnapshot != null) {\n                    restoreAttributesAfterInclude(request, attributesSnapshot);\n                }\n            }\n        }\n    }\n    \n    // \u8bf7\u6c42\u5206\u53d1\u4e2d\u5fc3\n    protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        // \u5b9a\u4e49\u4e00\u4e2a\u5df2\u5904\u7406\u8bf7\u6c42\uff0c\u6307\u5411 request\n        HttpServletRequest processedRequest = request;\n        // \u5b9a\u4e49\u5904\u7406\u5668\u6267\u884c\u94fe \u5185\u90e8\u5c01\u88c5\u62e6\u622a\u5668\u5217\u8868\u548c\u5904\u7406\u5668\n        HandlerExecutionChain mappedHandler = null;\n        boolean multipartRequestParsed = false;\n\n        // \u83b7\u53d6\u548c\u5f53\u524d\u8bf7\u6c42\u76f8\u5173\u7684\u5f02\u6b65\u7ba1\u7406\u5668\n        WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n\n        try {\n            ModelAndView mv = null;\n            Exception dispatchException = null;\n\n            try {\n                // \u5224\u65ad\u662f\u5426\u6709\u6587\u4ef6\u4e0a\u4f20\uff0c\u5982\u679c\u662f\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8bf7\u6c42\n                processedRequest = checkMultipart(request);\n                multipartRequestParsed = (processedRequest != request);\n\n                // getHandler \u4e2d\u904d\u5386 HandlerMapping\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684 HandlerExecutionChain\n                // HandlerExecutionChain\uff0c\u5305\u542b HandlerInterceptor \u548cHandlerMethod\n                // Determine handler for the current request.\n                mappedHandler = getHandler(processedRequest);\n                if (mappedHandler == null) {\n                    // not found\n                    noHandlerFound(processedRequest, response);\n                    return;\n                }\n\n                // \u83b7\u53d6\u652f\u6301\u8be5\u5904\u7406\u5668\u7684\u5904\u7406\u9002\u914d\u5668\n                HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler());\n\n                // \u5224\u65ad\u8bf7\u6c42\u5185\u5bb9\u662f\u5426\u9700\u8981\u4fee\u6539\uff0c\u5982\u679c\u672a\u4fee\u6539\u76f4\u63a5\u8fd4\u56de\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u672c\u5730\u7f13\u5b58\n                String method = request.getMethod();\n                boolean isGet = "GET".equals(method);\n                if (isGet || "HEAD".equals(method)) {\n                    long lastModified = ha.getLastModified(request, mappedHandler.getHandler());\n                    if (new ServletWebRequest(request, response).checkNotModified(lastModified) && isGet) {\n                        return;\n                    }\n                }\n\n                // \u5982\u679c\u6709\u62e6\u622a\u5668\u7684\u8bdd\uff0c\u4f1a\u6267\u884c\u62e6\u622a\u5668\u7684 preHandler \u65b9\u6cd5\n                if (!mappedHandler.applyPreHandle(processedRequest, response)) {\n                    // \u62e6\u622a\u5668\u751f\u6548 \u8fd4\u56de\n                    return;\n                }\n                // \u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u4f20\u5165\u8bf7\u6c42\u3001\u54cd\u5e94\u3001\u5bf9\u5e94\u7684\u5904\u7406\u5668\n                mv = ha.handle(processedRequest, response, mappedHandler.getHandler());\n\n                // \u5224\u65ad\u662f\u5426\u662f\u5f02\u6b65\u8bf7\u6c42\uff0c\u540e\u7eed\u64cd\u4f5c\u5747\u901a\u8fc7\u5f02\u6b65\u5904\u7406\n                if (asyncManager.isConcurrentHandlingStarted()) {\n                    return;\n                }\n\n                // \u5f53view\u4e3a\u7a7a\u65f6\uff0c\u6839\u636erequest\u8bbe\u7f6e\u9ed8\u8ba4view\n                applyDefaultViewName(processedRequest, mv);\n\n                // \u6267\u884c\u62e6\u622a\u5668\u7684 postHandle\n                mappedHandler.applyPostHandle(processedRequest, response, mv);\n            }\n            catch (Exception ex) {\n                // \u53d1\u9001\u5f02\u5e38 \u4fdd\u5b58\u5230 dispatchException\n                dispatchException = ex;\n            }\n            catch (Throwable err) {\n                // As of 4.3, we\'re processing Errors thrown from handler methods as well,\n                // making them available for @ExceptionHandler methods and other scenarios.\n                dispatchException = new NestedServletException("Handler dispatch failed", err);\n            }\n\n            // \u5bf9\u6267\u884c\u7ed3\u679c\u8fdb\u884c\u5904\u7406\uff0c\u5305\u62ec\u5904\u7406\u9002\u914d\u5668\u7684\u7ed3\u679c\u548c\u53d1\u9001\u7684\u5f02\u5e38\n            processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);\n        }\n        catch (Exception ex) {\n            triggerAfterCompletion(processedRequest, response, mappedHandler, ex);\n        }\n        catch (Throwable err) {\n            triggerAfterCompletion(processedRequest, response, mappedHandler,\n                    new NestedServletException("Handler processing failed", err));\n        }\n        finally {\n            // \u5224\u65ad\u662f\u5426\u662f\u5f02\u6b65\u8bf7\u6c42\n            if (asyncManager.isConcurrentHandlingStarted()) {\n                // Instead of postHandle and afterCompletion\n                if (mappedHandler != null) {\n                    mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);\n                }\n            }\n            else {\n                // \u5220\u9664\u4e0a\u4f20\u8d44\u6e90\n                // Clean up any resources used by a multipart request.\n                if (multipartRequestParsed) {\n                    cleanupMultipart(processedRequest);\n                }\n            }\n        }\n    }\n}\n')),Object(s.b)("h2",{id:"\u8bf7\u6c42\u5206\u53d1\u8be6\u89e3"},"\u8bf7\u6c42\u5206\u53d1\u8be6\u89e3"),Object(s.b)("h3",{id:"\u6587\u4ef6\u4e0a\u4f20\u8bf7\u6c42"},"\u6587\u4ef6\u4e0a\u4f20\u8bf7\u6c42"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'protected HttpServletRequest checkMultipart(HttpServletRequest request) throws MultipartException {\n    // \u5224\u65ad\u662f\u5426\u4e3a\u591a\u5757\u8bf7\u6c42\n    if (this.multipartResolver != null && this.multipartResolver.isMultipart(request)) {\n        if (WebUtils.getNativeRequest(request, MultipartHttpServletRequest.class) != null) {\n            if (request.getDispatcherType().equals(DispatcherType.REQUEST)) {\n                logger.trace("Request already resolved to MultipartHttpServletRequest, e.g. by MultipartFilter");\n            }\n        }\n        // \u5305\u542b\u5f02\u5e38\n        else if (hasMultipartException(request)) {\n            logger.debug("Multipart resolution previously failed for current request - " +\n                    "skipping re-resolution for undisturbed error rendering");\n        }\n        else {\n            try {\n                // \u4f7f\u7528\u591a\u5757\u89e3\u6790\u5668\u89e3\u6790\u591a\u5757\u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de\u591a\u5757\u8bf7\u6c42\u89e3\u6790\u5668\u5305\u88c5\u8fc7\u7684\u591a\u5757\u8bf7\u6c42\n                return this.multipartResolver.resolveMultipart(request);\n            }\n            catch (MultipartException ex) {\n                if (request.getAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE) != null) {\n                    logger.debug("Multipart resolution failed for error dispatch", ex);\n                    // Keep processing error dispatch with regular request handle below\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n    }\n    // If not returned before: return original request.\n    return request;\n}\n')),Object(s.b)("h3",{id:"\u67e5\u627e\u8bf7\u6c42\u5904\u7406\u5668"},"\u67e5\u627e\u8bf7\u6c42\u5904\u7406\u5668"),Object(s.b)("p",null,"Spring mvc \u5c06\u8bf7\u6c42\u5904\u7406\u7684\u67e5\u627e\u548c\u6267\u884c\u5206\u79bb\u5f00"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"@Nullable\nprotected HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {\n    if (this.handlerMappings != null) {\n        // \u904d\u5386\u5168\u90e8\u7684\u5904\u7406\u5668\u6620\u5c04\n        for (HandlerMapping mapping : this.handlerMappings) {\n            // \u83b7\u53d6\u4e0e\u672c\u6b21\u8bf7\u6c42\u9002\u914d\u7684\u5904\u7406\u5668\u94fe\n            HandlerExecutionChain handler = mapping.getHandler(request);\n            // \u8fd4\u56de\uff0c\u6709\u591a\u4e2a\u5904\u7406\u5668\u94fe\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a\n            if (handler != null) {\n                return handler;\n            }\n        }\n    }\n    return null;\n}\n")),Object(s.b)("h3",{id:"\u83b7\u53d6\u5904\u7406\u9002\u914d\u5668"},"\u83b7\u53d6\u5904\u7406\u9002\u914d\u5668"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'protected HandlerAdapter getHandlerAdapter(Object handler) throws ServletException {\n    if (this.handlerAdapters != null) {\n        // \u904d\u5386\u5904\u7406\u9002\u914d\u5668\u5217\u8868\uff0c\u8c03\u7528supports\u65b9\u6cd5\uff0c\u627e\u5230\u652f\u6301\u6539\u5904\u7406\u5668\u7684\u9002\u914d\u5668\n        for (HandlerAdapter adapter : this.handlerAdapters) {\n            // \u627e\u5230\u540e\u8fd4\u56de\n            if (adapter.supports(handler)) {\n                return adapter;\n            }\n        }\n    }\n    \n    throw new ServletException("No adapter for handler [" + handler +\n            "]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler");\n}\n')),Object(s.b)("h3",{id:"\u5904\u7406http\u7f13\u5b58"},"\u5904\u7406Http\u7f13\u5b58"),Object(s.b)("p",null,"\u4e3a\u4e86\u63d0\u9ad8 Http \u8bf7\u6c42\u6548\u7387\uff0c\u5141\u8bb8\u6d4f\u89c8\u5668\u5bf9Get \u8bf7\u6c42\u7684\u83b7\u53d6\u5230\u7684\u8d44\u6e90\u8fdb\u884c\u7f13\u5b58"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'// \u5224\u65ad\u8bf7\u6c42\u5185\u5bb9\u662f\u5426\u9700\u8981\u4fee\u6539\uff0c\u5982\u679c\u672a\u4fee\u6539\u76f4\u63a5\u8fd4\u56de\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u672c\u5730\u7f13\u5b58\nString method = request.getMethod();\nboolean isGet = "GET".equals(method);\n// \u53ea\u652f\u6301 "get head" \u8bf7\u6c42\nif (isGet || "HEAD".equals(method)) {\n    // \u83b7\u53d6\u6700\u540e\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u95f4\n    long lastModified = ha.getLastModified(request, mappedHandler.getHandler());\n    // \u68c0\u67e5\u5f53\u524d\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684\u7f13\u5b58\u4fe1\u606f\u662f\u5426\u8fc7\u671f\n    if (new ServletWebRequest(request, response).checkNotModified(lastModified) && isGet) {\n        return;\n    }\n}\n')),Object(s.b)("h3",{id:"\u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\u94fe"},"\u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\u94fe"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"public class HandlerExecutionChain {\n    boolean applyPreHandle(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        // \u83b7\u53d6\u5f53\u524d\u5904\u7406\u5668\u6267\u884c\u94fe\u7684\u6240\u6709\u62e6\u622a\u5668\n        HandlerInterceptor[] interceptors = getInterceptors();\n        if (!ObjectUtils.isEmpty(interceptors)) {\n            // \u904d\u5386\u62e6\u622a\u5668\n            for (int i = 0; i < interceptors.length; i++) {\n                HandlerInterceptor interceptor = interceptors[i];\n                // \u6267\u884c\u62e6\u622a\u5668\u7684preHandle\u65b9\u6cd5\n                // \u8fd4\u56de false,\u505c\u6b62\u6267\u884c\n                if (!interceptor.preHandle(request, response, this.handler)) {\n                    triggerAfterCompletion(request, response, null);\n                    return false;\n                }\n                // \u8fd4\u56de true\uff0c \u62e6\u622a\u5668\u7d22\u5f15\u8bbe\u4e3a\u5f53\u524d\u904d\u5386\u7d22\u5f15\n                this.interceptorIndex = i;\n            }\n        }\n        // \u6267\u884c\u5b8c\u6bd5\n        return true;\n    }\n}\n")),Object(s.b)("h3",{id:"\u5904\u7406\u9002\u914d\u5668\u6267\u884c"},"\u5904\u7406\u9002\u914d\u5668\u6267\u884c"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"// \u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u4f20\u5165\u8bf7\u6c42\u3001\u54cd\u5e94\u3001\u5bf9\u5e94\u7684\u5904\u7406\u5668\nmv = ha.handle(processedRequest, response, mappedHandler.getHandler());\n")),Object(s.b)("h3",{id:"\u8fd4\u56de\u503c\u89c6\u56fe\u540d\u5904\u7406"},"\u8fd4\u56de\u503c\u89c6\u56fe\u540d\u5904\u7406"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"private void applyDefaultViewName(HttpServletRequest request, @Nullable ModelAndView mv) throws Exception {\n    // mv \u4e0d\u4e3a\u7a7a \u4e14\u4e0d\u5305\u542b\u89c6\u56fe\n    if (mv != null && !mv.hasView()) {\n        // \u83b7\u53d6\u9ed8\u8ba4\u7684\u89c6\u56fe\u540d\n        String defaultViewName = getDefaultViewName(request);\n        if (defaultViewName != null) {\n            // \u9ed8\u8ba4\u7684\u89c6\u56fe\u540d\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a ModelAndView \u7684\u89c6\u56fe\u540d\n            mv.setViewName(defaultViewName);\n        }\n    }\n}\n\n@Nullable\nprotected String getDefaultViewName(HttpServletRequest request) throws Exception {\n    return (this.viewNameTranslator != null ? this.viewNameTranslator.getViewName(request) : null);\n}\n")),Object(s.b)("h3",{id:"\u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\u94fe"},"\u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\u94fe"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"public class HandlerExecutionChain {\n    void applyPostHandle(HttpServletRequest request, HttpServletResponse response, @Nullable ModelAndView mv)\n            throws Exception {\n\n        HandlerInterceptor[] interceptors = getInterceptors();\n        if (!ObjectUtils.isEmpty(interceptors)) {\n            for (int i = interceptors.length - 1; i >= 0; i--) {\n                HandlerInterceptor interceptor = interceptors[i];\n                // \u6267\u884c\uff0c\u65e0\u8fd4\u56de\u503c\n                interceptor.postHandle(request, response, this.handler, mv);\n            }\n        }\n    }\n}\n")),Object(s.b)("h3",{id:"\u5904\u7406\u8fd4\u56de\u503c\u548c\u54cd\u5e94"},"\u5904\u7406\u8fd4\u56de\u503c\u548c\u54cd\u5e94"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'private void processDispatchResult(HttpServletRequest request, HttpServletResponse response,\n        @Nullable HandlerExecutionChain mappedHandler, @Nullable ModelAndView mv,\n        @Nullable Exception exception) throws Exception {\n\n    // \u6807\u8bb0\u662f\u5426\u662f error \u89c6\u56fe\n    boolean errorView = false;\n\n    // \u53d1\u751f\u5f02\u5e38\n    if (exception != null) {\n        if (exception instanceof ModelAndViewDefiningException) {\n            logger.debug("ModelAndViewDefiningException encountered", exception);\n            mv = ((ModelAndViewDefiningException) exception).getModelAndView();\n        }\n        else {\n            // \u83b7\u53d6\u5904\u7406\u5668\n            Object handler = (mappedHandler != null ? mappedHandler.getHandler() : null);\n            // \u6267\u884cprocess\u5904\u7406\u5668\u7684\u5f02\u5e38\u65b9\u6cd5\uff0c\u83b7\u53d6\u5904\u7406\u4e86\u5f02\u5e38\u7ed3\u679c\u540e\u5f97\u5230\u7684ModelAndView\u7ed3\u679c\n            mv = processHandlerException(request, response, handler, exception);\n            // \u8fd4\u56de\u5f02\u5e38\u89c6\u56fe\n            errorView = (mv != null);\n        }\n    }\n\n    // Did the handler return a view to render?\n    // \u89c6\u56fe\u548c\u6a21\u578b\u4e0d\u4e3a\u7a7a\uff0c\u4e14\u89c6\u56fe\u4e0e\u6a21\u578b\u6ca1\u54df\u6807\u8bb0\u4e3a\u88ab\u6e05\u7406\n    if (mv != null && !mv.wasCleared()) {\n        // \u6267\u884c\u6e32\u67d3\u89c6\u56fe\u7684\u64cd\u4f5c\n        render(mv, request, response);\n        // \u5982\u679c\u662f\u5f02\u5e38\u89c6\u56fe\uff0c\u6e32\u67d3\u540e\u9700\u8981\u6e05\u7406\u8bf7\u6c42\u5c5e\u6027\u7684\u5f02\u5e38\u4fe1\u606f\n        if (errorView) {\n            WebUtils.clearErrorRequestAttributes(request);\n        }\n    }\n    else {\n        // \u89c6\u56fe\u4e3a\u7a7a\uff0c\u6253\u5370\u65e5\u5fd7\n        if (logger.isTraceEnabled()) {\n            logger.trace("No view rendering, null ModelAndView returned.");\n        }\n    }\n\n    // \u5982\u679c\u5f02\u6b65\u5904\u7406\u5df2\u7ecf\u5f00\u59cb\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u7ed3\u675f\u6267\u884c\n    if (WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) {\n        // Concurrent handling started during a forward\n        return;\n    }\n\n    // \u89e6\u53d1\u62e6\u622a\u5668\u94fe\u7684\u5b8c\u6210\u540e\u65b9\u6cd5\n    if (mappedHandler != null) {\n        // Exception (if any) is already handled..\n        mappedHandler.triggerAfterCompletion(request, response, null);\n    }\n}\n')),Object(s.b)("h3",{id:"\u6267\u884c\u5b8c\u6210\u62e6\u622a\u5668\u94fe"},"\u6267\u884c\u5b8c\u6210\u62e6\u622a\u5668\u94fe"),Object(s.b)("p",null,"\u5728\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u65e0\u8bba\u662f preHandle \u63d0\u524d\u8fd4\u56de false,\u8fd8\u662f\u5904\u7406\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u6216\u662f\u6b63\u5e38\u5904\u7406\u5b8c\u6210\uff0c\u90fd\u4f1a\u8c03\u7528\u62e6\u622a\u5668\u94fe\u7684\u8be5\u65b9\u6cd5"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},'public class HandlerExecutionChain {\n    void triggerAfterCompletion(HttpServletRequest request, HttpServletResponse response, @Nullable Exception ex)\n            throws Exception {\n\n        HandlerInterceptor[] interceptors = getInterceptors();\n        if (!ObjectUtils.isEmpty(interceptors)) {\n            // \u4ee5 interceptorIndex \u7d22\u5f15\u5f00\u59cb\u5012\u5e8f\u904d\u5386\n            for (int i = this.interceptorIndex; i >= 0; i--) {\n                HandlerInterceptor interceptor = interceptors[i];\n                try {\n                    // \u6267\u884c\u62e6\u622a\u5668\u7684 afterCompletion \u65b9\u6cd5\n                    interceptor.afterCompletion(request, response, this.handler, ex);\n                }\n                catch (Throwable ex2) {\n                    logger.error("HandlerInterceptor.afterCompletion threw exception", ex2);\n                }\n            }\n        }\n    }\n}\n')),Object(s.b)("h3",{id:"\u6e05\u7406\u8d44\u6e90"},"\u6e05\u7406\u8d44\u6e90"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-java"},"protected void cleanupMultipart(HttpServletRequest request) {\n    if (this.multipartResolver != null) {\n        MultipartHttpServletRequest multipartRequest =\n                WebUtils.getNativeRequest(request, MultipartHttpServletRequest.class);\n        if (multipartRequest != null) {\n            // \u6e05\u7406\n            this.multipartResolver.cleanupMultipart(multipartRequest);\n        }\n    }\n}\n")))}c.isMDXComponent=!0},269:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),c=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),b=r,m=d["".concat(l,".").concat(b)]||d[b]||u[b]||s;return n?a.a.createElement(m,i(i({ref:t},p),{},{components:n})):a.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=b;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},432:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/DispatcherServlet-3f49e596b609b160e050aa2269c48745.png"},433:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/2019021808191633-a3b6fa71fdcae3995568b916f793bf1a.png"},434:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/714509-20170920165202868-445512458-7305faf9a238e2246b0cb50629b65025.png"}}]);